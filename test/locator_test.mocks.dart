// Mocks generated by Mockito 5.4.6 from annotations
// in esim_open_source/test/locator_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i19;
import 'dart:convert' as _i98;
import 'dart:typed_data' as _i99;
import 'dart:ui' as _i14;

import 'package:device_info_plus/device_info_plus.dart' as _i2;
import 'package:esim_open_source/data/remote/auth_reload_interface.dart'
    as _i50;
import 'package:esim_open_source/data/remote/request/device/device_info_request_model.dart'
    as _i61;
import 'package:esim_open_source/data/remote/request/related_search.dart'
    as _i53;
import 'package:esim_open_source/data/remote/responses/account/account_model.dart'
    as _i92;
import 'package:esim_open_source/data/remote/responses/app/banner_response_model.dart'
    as _i67;
import 'package:esim_open_source/data/remote/responses/app/dynamic_page_response.dart'
    as _i65;
import 'package:esim_open_source/data/remote/responses/auth/auth_response_model.dart'
    as _i44;
import 'package:esim_open_source/data/remote/responses/base_response_model.dart'
    as _i77;
import 'package:esim_open_source/data/remote/responses/bundles/bundle_consumption_response.dart'
    as _i56;
import 'package:esim_open_source/data/remote/responses/bundles/bundle_response_model.dart'
    as _i73;
import 'package:esim_open_source/data/remote/responses/bundles/country_response_model.dart'
    as _i80;
import 'package:esim_open_source/data/remote/responses/bundles/regions_response_model.dart'
    as _i81;
import 'package:esim_open_source/data/remote/responses/user/order_history_response_model.dart'
    as _i59;
import 'package:esim_open_source/data/remote/responses/user/user_notification_response.dart'
    as _i58;
import 'package:esim_open_source/data/remote/unauthorized_access_interface.dart'
    as _i49;
import 'package:esim_open_source/data/services/connectivity_service_impl.dart'
    as _i47;
import 'package:esim_open_source/domain/data/api_app.dart' as _i97;
import 'package:esim_open_source/domain/data/api_bundles.dart' as _i51;
import 'package:esim_open_source/domain/data/api_device.dart' as _i96;
import 'package:esim_open_source/domain/data/api_promotion.dart' as _i62;
import 'package:esim_open_source/domain/data/api_user.dart' as _i52;
import 'package:esim_open_source/domain/repository/api_app_repository.dart'
    as _i5;
import 'package:esim_open_source/domain/repository/api_auth_repository.dart'
    as _i48;
import 'package:esim_open_source/domain/repository/api_bundles_repository.dart'
    as _i54;
import 'package:esim_open_source/domain/repository/api_device_repository.dart'
    as _i60;
import 'package:esim_open_source/domain/repository/api_promotion_repository.dart'
    as _i63;
import 'package:esim_open_source/domain/repository/api_user_repository.dart'
    as _i57;
import 'package:esim_open_source/domain/repository/services/analytics_service.dart'
    as _i8;
import 'package:esim_open_source/domain/repository/services/app_configuration_service.dart'
    as _i45;
import 'package:esim_open_source/domain/repository/services/connectivity_service.dart'
    as _i16;
import 'package:esim_open_source/domain/repository/services/device_info_service.dart'
    as _i38;
import 'package:esim_open_source/domain/repository/services/dynamic_linking_service.dart'
    as _i40;
import 'package:esim_open_source/domain/repository/services/environment_service.dart'
    as _i93;
import 'package:esim_open_source/domain/repository/services/flutter_channel_handler_service.dart'
    as _i13;
import 'package:esim_open_source/domain/repository/services/local_storage_service.dart'
    as _i7;
import 'package:esim_open_source/domain/repository/services/payment_service.dart'
    as _i11;
import 'package:esim_open_source/domain/repository/services/push_notification_service.dart'
    as _i27;
import 'package:esim_open_source/domain/repository/services/redirections_handler_service.dart'
    as _i12;
import 'package:esim_open_source/domain/repository/services/referral_info_service.dart'
    as _i46;
import 'package:esim_open_source/domain/repository/services/secure_storage_service.dart'
    as _i42;
import 'package:esim_open_source/domain/repository/services/social_login_service.dart'
    as _i30;
import 'package:esim_open_source/domain/use_case/app/add_device_use_case.dart'
    as _i3;
import 'package:esim_open_source/domain/use_case/app/get_about_us_use_case.dart'
    as _i64;
import 'package:esim_open_source/domain/use_case/app/get_banner_use_case.dart'
    as _i24;
import 'package:esim_open_source/domain/use_case/app/get_terms_and_condition_use_case.dart'
    as _i68;
import 'package:esim_open_source/domain/use_case/auth/login_use_case.dart'
    as _i28;
import 'package:esim_open_source/domain/use_case/auth/refresh_token_use_case.dart'
    as _i26;
import 'package:esim_open_source/domain/use_case/auth/resend_otp_use_case.dart'
    as _i32;
import 'package:esim_open_source/domain/use_case/auth/social_media_verify_login_use_case.dart'
    as _i31;
import 'package:esim_open_source/domain/use_case/auth/verify_otp_use_case.dart'
    as _i33;
import 'package:esim_open_source/domain/use_case/base_use_case.dart' as _i66;
import 'package:esim_open_source/domain/use_case/user/get_bundle_label_use_case.dart'
    as _i21;
import 'package:esim_open_source/domain/use_case/user/get_user_notifications_use_case.dart'
    as _i20;
import 'package:esim_open_source/domain/use_case/user/resend_order_otp_use_case.dart'
    as _i34;
import 'package:esim_open_source/domain/use_case/user/verify_order_otp_use_case.dart'
    as _i35;
import 'package:esim_open_source/domain/util/resource.dart' as _i4;
import 'package:esim_open_source/presentation/enums/dialog_icon_type.dart'
    as _i75;
import 'package:esim_open_source/presentation/enums/payment_type.dart' as _i41;
import 'package:esim_open_source/presentation/enums/view_state.dart' as _i72;
import 'package:esim_open_source/presentation/extensions/stacked_services/custom_route_observer.dart'
    as _i17;
import 'package:esim_open_source/presentation/reactive_service/bundles_data_service.dart'
    as _i55;
import 'package:esim_open_source/presentation/reactive_service/user_authentication_service.dart'
    as _i18;
import 'package:esim_open_source/presentation/reactive_service/user_service.dart'
    as _i10;
import 'package:esim_open_source/presentation/setup_dialog_ui.dart' as _i74;
import 'package:esim_open_source/presentation/shared/in_app_redirection_heper.dart'
    as _i43;
import 'package:esim_open_source/presentation/view_models/main_model.dart'
    as _i76;
import 'package:esim_open_source/presentation/views/home_flow_views/data_plans_view/data_plans_view_model.dart'
    as _i79;
import 'package:esim_open_source/presentation/views/home_flow_views/data_plans_view/purchase_loading_view/purchase_loading_view_model.dart'
    as _i85;
import 'package:esim_open_source/presentation/views/home_flow_views/data_plans_view/verify_purchase_view/verify_purchase_view_model.dart'
    as _i89;
import 'package:esim_open_source/presentation/views/home_flow_views/main_page/home_pager_view_model.dart'
    as _i82;
import 'package:esim_open_source/presentation/views/home_flow_views/my_esim_view/my_esim_view_model.dart'
    as _i22;
import 'package:esim_open_source/presentation/views/home_flow_views/profile_view/profile_view_model.dart'
    as _i78;
import 'package:esim_open_source/presentation/views/home_flow_views/profile_view/profile_view_sections/user_guide_view/android_user_guide_view/android_user_guide_view_model.dart'
    as _i70;
import 'package:esim_open_source/presentation/views/home_flow_views/profile_view/profile_view_sections/user_guide_view/user_guide_data_source/user_guide_view_data_source.dart'
    as _i36;
import 'package:esim_open_source/presentation/views/home_flow_views/profile_view/profile_view_sections/user_guide_view/user_guide_detailed_view/user_guide_detailed_view_model.dart'
    as _i91;
import 'package:esim_open_source/presentation/views/pre_sign_in/continue_with_email_view/continue_with_email_view_model.dart'
    as _i84;
import 'package:esim_open_source/presentation/views/pre_sign_in/device_compability_check_view/device_compability_check_view_model.dart'
    as _i86;
import 'package:esim_open_source/presentation/views/pre_sign_in/login_view/login_view_model.dart'
    as _i87;
import 'package:esim_open_source/presentation/views/pre_sign_in/verify_login_view/verify_login_view_model.dart'
    as _i88;
import 'package:esim_open_source/presentation/views/skeleton_view/skeleton_view_model.dart'
    as _i90;
import 'package:esim_open_source/presentation/views/start_up_view/startup_view_model.dart'
    as _i83;
import 'package:esim_open_source/presentation/widgets/lockable_tab_bar.dart'
    as _i25;
import 'package:esim_open_source/utils/value_stream.dart' as _i6;
import 'package:flutter/material.dart' as _i23;
import 'package:flutter_esim/flutter_esim.dart' as _i95;
import 'package:http/http.dart' as _i37;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i39;
import 'package:phone_input/phone_input_package.dart' as _i29;
import 'package:shared_preferences/src/shared_preferences_legacy.dart' as _i94;
import 'package:stacked/stacked.dart' as _i71;
import 'package:stacked_services/stacked_services.dart' as _i15;
import 'package:stacked_themes/src/theme_manager.dart' as _i69;
import 'package:stacked_themes/stacked_themes.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeDeviceInfoPlugin_0 extends _i1.SmartFake
    implements _i2.DeviceInfoPlugin {
  _FakeDeviceInfoPlugin_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddDeviceParams_1 extends _i1.SmartFake
    implements _i3.AddDeviceParams {
  _FakeAddDeviceParams_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResource_2<T> extends _i1.SmartFake implements _i4.Resource<T> {
  _FakeResource_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeApiAppRepository_3 extends _i1.SmartFake
    implements _i5.ApiAppRepository {
  _FakeApiAppRepository_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeValueStream_4<T> extends _i1.SmartFake
    implements _i6.ValueStream<T> {
  _FakeValueStream_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocalStorageService_5 extends _i1.SmartFake
    implements _i7.LocalStorageService {
  _FakeLocalStorageService_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAnalyticsService_6 extends _i1.SmartFake
    implements _i8.AnalyticsService {
  _FakeAnalyticsService_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeThemeService_7 extends _i1.SmartFake implements _i9.ThemeService {
  _FakeThemeService_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserService_8 extends _i1.SmartFake implements _i10.UserService {
  _FakeUserService_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaymentService_9 extends _i1.SmartFake
    implements _i11.PaymentService {
  _FakePaymentService_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRedirectionsHandlerService_10 extends _i1.SmartFake
    implements _i12.RedirectionsHandlerService {
  _FakeRedirectionsHandlerService_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddDeviceUseCase_11 extends _i1.SmartFake
    implements _i3.AddDeviceUseCase {
  _FakeAddDeviceUseCase_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterChannelHandlerService_12 extends _i1.SmartFake
    implements _i13.FlutterChannelHandlerService {
  _FakeFlutterChannelHandlerService_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeColor_13 extends _i1.SmartFake implements _i14.Color {
  _FakeColor_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDialogService_14 extends _i1.SmartFake
    implements _i15.DialogService {
  _FakeDialogService_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSnackbarService_15 extends _i1.SmartFake
    implements _i15.SnackbarService {
  _FakeSnackbarService_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBottomSheetService_16 extends _i1.SmartFake
    implements _i15.BottomSheetService {
  _FakeBottomSheetService_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationService_17 extends _i1.SmartFake
    implements _i15.NavigationService {
  _FakeNavigationService_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeConnectivityService_18 extends _i1.SmartFake
    implements _i16.ConnectivityService {
  _FakeConnectivityService_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeNavigationRouter_19 extends _i1.SmartFake
    implements _i17.NavigationRouter {
  _FakeNavigationRouter_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserAuthenticationService_20 extends _i1.SmartFake
    implements _i18.UserAuthenticationService {
  _FakeUserAuthenticationService_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_21<T1> extends _i1.SmartFake implements _i19.Future<T1> {
  _FakeFuture_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_22 extends _i1.SmartFake implements _i14.Locale {
  _FakeLocale_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetUserNotificationsUseCase_23 extends _i1.SmartFake
    implements _i20.GetUserNotificationsUseCase {
  _FakeGetUserNotificationsUseCase_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBundleLabelUseCase_24 extends _i1.SmartFake
    implements _i21.GetBundleLabelUseCase {
  _FakeGetBundleLabelUseCase_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeESimState_25 extends _i1.SmartFake implements _i22.ESimState {
  _FakeESimState_25(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_26 extends _i1.SmartFake
    implements _i23.TextEditingController {
  _FakeTextEditingController_26(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetBannerUseCase_27 extends _i1.SmartFake
    implements _i24.GetBannerUseCase {
  _FakeGetBannerUseCase_27(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLockableTabController_28 extends _i1.SmartFake
    implements _i25.LockableTabController {
  _FakeLockableTabController_28(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRefreshTokenUseCase_29 extends _i1.SmartFake
    implements _i26.RefreshTokenUseCase {
  _FakeRefreshTokenUseCase_29(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePushNotificationService_30 extends _i1.SmartFake
    implements _i27.PushNotificationService {
  _FakePushNotificationService_30(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLoginUseCase_31 extends _i1.SmartFake implements _i28.LoginUseCase {
  _FakeLoginUseCase_31(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePhoneController_32 extends _i1.SmartFake
    implements _i29.PhoneController {
  _FakePhoneController_32(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocialLoginService_33 extends _i1.SmartFake
    implements _i30.SocialLoginService {
  _FakeSocialLoginService_33(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSocialMediaVerifyLoginUseCase_34 extends _i1.SmartFake
    implements _i31.SocialMediaVerifyLoginUseCase {
  _FakeSocialMediaVerifyLoginUseCase_34(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendOtpUseCase_35 extends _i1.SmartFake
    implements _i32.ResendOtpUseCase {
  _FakeResendOtpUseCase_35(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerifyOtpUseCase_36 extends _i1.SmartFake
    implements _i33.VerifyOtpUseCase {
  _FakeVerifyOtpUseCase_36(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResendOrderOtpUseCase_37 extends _i1.SmartFake
    implements _i34.ResendOrderOtpUseCase {
  _FakeResendOrderOtpUseCase_37(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeVerifyOrderOtpUseCase_38 extends _i1.SmartFake
    implements _i35.VerifyOrderOtpUseCase {
  _FakeVerifyOrderOtpUseCase_38(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserGuideViewDataSource_39 extends _i1.SmartFake
    implements _i36.UserGuideViewDataSource {
  _FakeUserGuideViewDataSource_39(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeScrollController_40 extends _i1.SmartFake
    implements _i23.ScrollController {
  _FakeScrollController_40(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_41 extends _i1.SmartFake implements _i37.Response {
  _FakeResponse_41(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamedResponse_42 extends _i1.SmartFake
    implements _i37.StreamedResponse {
  _FakeStreamedResponse_42(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NavigationRouter].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationRouter extends _i1.Mock implements _i17.NavigationRouter {
  MockNavigationRouter() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  bool isPageVisible(String? routeName) => (super.noSuchMethod(
        Invocation.method(
          #isPageVisible,
          [routeName],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setIsPageVisible({
    required bool? value,
    required bool? notifyChanges,
    String? routeName,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setIsPageVisible,
          [],
          {
            #value: value,
            #notifyChanges: notifyChanges,
            #routeName: routeName,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [CustomRouteObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockCustomRouteObserver extends _i1.Mock
    implements _i17.CustomRouteObserver {
  MockCustomRouteObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i23.Route<dynamic>? route,
    _i23.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i23.Route<dynamic>? route,
    _i23.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool debugObservingRoute(_i23.Route<dynamic>? route) => (super.noSuchMethod(
        Invocation.method(
          #debugObservingRoute,
          [route],
        ),
        returnValue: false,
      ) as bool);

  @override
  void subscribe(
    _i23.RouteAware? routeAware,
    _i23.Route<dynamic>? route,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #subscribe,
          [
            routeAware,
            route,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unsubscribe(_i23.RouteAware? routeAware) => super.noSuchMethod(
        Invocation.method(
          #unsubscribe,
          [routeAware],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i23.Route<dynamic>? route,
    _i23.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i23.Route<dynamic>? newRoute,
    _i23.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didChangeTop(
    _i23.Route<dynamic>? topRoute,
    _i23.Route<dynamic>? previousTopRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didChangeTop,
          [
            topRoute,
            previousTopRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i23.Route<dynamic>? route,
    _i23.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [DeviceInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceInfoService extends _i1.Mock implements _i38.DeviceInfoService {
  MockDeviceInfoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<String> get deviceID => (super.noSuchMethod(
        Invocation.getter(#deviceID),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.getter(#deviceID),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<_i2.DeviceInfoPlugin> get deviceInfoPlugin => (super.noSuchMethod(
        Invocation.getter(#deviceInfoPlugin),
        returnValue:
            _i19.Future<_i2.DeviceInfoPlugin>.value(_FakeDeviceInfoPlugin_0(
          this,
          Invocation.getter(#deviceInfoPlugin),
        )),
      ) as _i19.Future<_i2.DeviceInfoPlugin>);

  @override
  _i19.Future<Map<String, dynamic>> get deviceData => (super.noSuchMethod(
        Invocation.getter(#deviceData),
        returnValue:
            _i19.Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i19.Future<Map<String, dynamic>>);

  @override
  _i19.Future<_i3.AddDeviceParams> get addDeviceParams => (super.noSuchMethod(
        Invocation.getter(#addDeviceParams),
        returnValue:
            _i19.Future<_i3.AddDeviceParams>.value(_FakeAddDeviceParams_1(
          this,
          Invocation.getter(#addDeviceParams),
        )),
      ) as _i19.Future<_i3.AddDeviceParams>);

  @override
  _i19.Future<bool> get isRooted => (super.noSuchMethod(
        Invocation.getter(#isRooted),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> get isPhysicalDevice => (super.noSuchMethod(
        Invocation.getter(#isPhysicalDevice),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> get isDevelopmentModeEnable => (super.noSuchMethod(
        Invocation.getter(#isDevelopmentModeEnable),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
}

/// A class which mocks [DynamicLinkingService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDynamicLinkingService extends _i1.Mock
    implements _i40.DynamicLinkingService {
  MockDynamicLinkingService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> initialize({
    required dynamic Function({
      required bool isInitial,
      required Uri uri,
    })? onDeepLink,
    bool? enableLogging = true,
    bool? validateSDKIntegration = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialize,
          [],
          {
            #onDeepLink: onDeepLink,
            #enableLogging: enableLogging,
            #validateSDKIntegration: validateSDKIntegration,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<_i40.DynamicLinkingTrackingStatus>
      requestTrackingAuthorization() => (super.noSuchMethod(
            Invocation.method(
              #requestTrackingAuthorization,
              [],
            ),
            returnValue: _i19.Future<_i40.DynamicLinkingTrackingStatus>.value(
                _i40.DynamicLinkingTrackingStatus.notDetermined),
          ) as _i19.Future<_i40.DynamicLinkingTrackingStatus>);

  @override
  _i19.Future<_i40.DynamicLinkingTrackingStatus>
      getTrackingAuthorizationStatus() => (super.noSuchMethod(
            Invocation.method(
              #getTrackingAuthorizationStatus,
              [],
            ),
            returnValue: _i19.Future<_i40.DynamicLinkingTrackingStatus>.value(
                _i40.DynamicLinkingTrackingStatus.notDetermined),
          ) as _i19.Future<_i40.DynamicLinkingTrackingStatus>);

  @override
  _i19.Future<String?> generateBranchLink({
    required String? deepLinkUrl,
    String? referUserID,
    String? title,
    String? description,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateBranchLink,
          [],
          {
            #deepLinkUrl: deepLinkUrl,
            #referUserID: referUserID,
            #title: title,
            #description: description,
          },
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
}

/// A class which mocks [PushNotificationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPushNotificationService extends _i1.Mock
    implements _i27.PushNotificationService {
  MockPushNotificationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> initialise(
          {required void Function({
            required bool isClicked,
            required bool isInitial,
            Map<String, dynamic>? handlePushData,
          })? handlePushData}) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
          {#handlePushData: handlePushData},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<String?> getFcmToken() => (super.noSuchMethod(
        Invocation.method(
          #getFcmToken,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);
}

/// A class which mocks [SocialLoginService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSocialLoginService extends _i1.Mock
    implements _i30.SocialLoginService {
  MockSocialLoginService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Stream<_i30.SocialLoginResult> get socialLoginResultStream =>
      (super.noSuchMethod(
        Invocation.getter(#socialLoginResultStream),
        returnValue: _i19.Stream<_i30.SocialLoginResult>.empty(),
      ) as _i19.Stream<_i30.SocialLoginResult>);

  @override
  _i19.Future<_i19.Stream<_i30.SocialLoginResult>> initialise({
    required String? url,
    required String? anonKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #initialise,
          [],
          {
            #url: url,
            #anonKey: anonKey,
          },
        ),
        returnValue: _i19.Future<_i19.Stream<_i30.SocialLoginResult>>.value(
            _i19.Stream<_i30.SocialLoginResult>.empty()),
      ) as _i19.Future<_i19.Stream<_i30.SocialLoginResult>>);

  @override
  _i19.Future<_i19.Stream<_i30.SocialLoginResult>> signInWithApple() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithApple,
          [],
        ),
        returnValue: _i19.Future<_i19.Stream<_i30.SocialLoginResult>>.value(
            _i19.Stream<_i30.SocialLoginResult>.empty()),
      ) as _i19.Future<_i19.Stream<_i30.SocialLoginResult>>);

  @override
  _i19.Future<_i19.Stream<_i30.SocialLoginResult>> signInWithGoogle() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithGoogle,
          [],
        ),
        returnValue: _i19.Future<_i19.Stream<_i30.SocialLoginResult>>.value(
            _i19.Stream<_i30.SocialLoginResult>.empty()),
      ) as _i19.Future<_i19.Stream<_i30.SocialLoginResult>>);

  @override
  _i19.Future<_i19.Stream<_i30.SocialLoginResult>> signInWithFaceBook() =>
      (super.noSuchMethod(
        Invocation.method(
          #signInWithFaceBook,
          [],
        ),
        returnValue: _i19.Future<_i19.Stream<_i30.SocialLoginResult>>.value(
            _i19.Stream<_i30.SocialLoginResult>.empty()),
      ) as _i19.Future<_i19.Stream<_i30.SocialLoginResult>>);

  @override
  _i19.Future<void> logOut() => (super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onDispose() => (super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [PaymentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaymentService extends _i1.Mock implements _i11.PaymentService {
  MockPaymentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> prepareCheckout({
    required _i41.PaymentType? paymentType,
    required String? publishableKey,
    String? merchantIdentifier,
    String? urlScheme,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #prepareCheckout,
          [],
          {
            #paymentType: paymentType,
            #publishableKey: publishableKey,
            #merchantIdentifier: merchantIdentifier,
            #urlScheme: urlScheme,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<_i41.PaymentResult> processOrderPayment({
    required _i41.PaymentType? paymentType,
    required String? billingCountryCode,
    required String? paymentIntentClientSecret,
    required String? customerId,
    required String? customerEphemeralKeySecret,
    String? merchantDisplayName = 'Esim',
    bool? testEnv = false,
    String? iccID,
    String? orderID,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #processOrderPayment,
          [],
          {
            #paymentType: paymentType,
            #billingCountryCode: billingCountryCode,
            #paymentIntentClientSecret: paymentIntentClientSecret,
            #customerId: customerId,
            #customerEphemeralKeySecret: customerEphemeralKeySecret,
            #merchantDisplayName: merchantDisplayName,
            #testEnv: testEnv,
            #iccID: iccID,
            #orderID: orderID,
          },
        ),
        returnValue:
            _i19.Future<_i41.PaymentResult>.value(_i41.PaymentResult.completed),
      ) as _i19.Future<_i41.PaymentResult>);
}

/// A class which mocks [SecureStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorageService extends _i1.Mock
    implements _i42.SecureStorageService {
  MockSecureStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<int?> getInt(_i42.SecureStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: _i19.Future<int?>.value(),
      ) as _i19.Future<int?>);

  @override
  _i19.Future<bool?> getBool(_i42.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: _i19.Future<bool?>.value(),
      ) as _i19.Future<bool?>);

  @override
  _i19.Future<double?> getDouble(_i42.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: _i19.Future<double?>.value(),
      ) as _i19.Future<double?>);

  @override
  _i19.Future<String?> getString(_i42.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<List<String>?> getStringList(_i42.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #getStringList,
          [key],
        ),
        returnValue: _i19.Future<List<String>?>.value(),
      ) as _i19.Future<List<String>?>);

  @override
  _i19.Future<bool> containsKey(_i42.SecureStorageKeys? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> setInt(
    _i42.SecureStorageKeys? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setBool(
    _i42.SecureStorageKeys? key, {
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [key],
          {#value: value},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setDouble(
    _i42.SecureStorageKeys? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setString(
    _i42.SecureStorageKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> setStringList(
    _i42.SecureStorageKeys? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> remove(_i42.SecureStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [RedirectionsHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRedirectionsHandlerService extends _i1.Mock
    implements _i12.RedirectionsHandlerService {
  MockRedirectionsHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> handleInitialRedirection(void Function()? callBack) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleInitialRedirection,
          [callBack],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void redirectToRoute({required _i43.InAppRedirection? redirection}) =>
      super.noSuchMethod(
        Invocation.method(
          #redirectToRoute,
          [],
          {#redirection: redirection},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void serialiseAndRedirectNotification({
    required bool? isClicked,
    required bool? isInitial,
    Map<String, dynamic>? handlePushData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #serialiseAndRedirectNotification,
          [],
          {
            #isClicked: isClicked,
            #isInitial: isInitial,
            #handlePushData: handlePushData,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void serialiseAndRedirectDeepLink({
    required bool? isInitial,
    required Uri? uriDeepLinkData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #serialiseAndRedirectDeepLink,
          [],
          {
            #isInitial: isInitial,
            #uriDeepLinkData: uriDeepLinkData,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notificationInboxRedirections({
    required String? iccID,
    required String? category,
    required bool? isUnlimitedData,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #notificationInboxRedirections,
          [],
          {
            #iccID: iccID,
            #category: category,
            #isUnlimitedData: isUnlimitedData,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LocalStorageService].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorageService extends _i1.Mock
    implements _i7.LocalStorageService {
  MockLocalStorageService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get accessToken => (super.noSuchMethod(
        Invocation.getter(#accessToken),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#accessToken),
        ),
      ) as String);

  @override
  String get refreshToken => (super.noSuchMethod(
        Invocation.getter(#refreshToken),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#refreshToken),
        ),
      ) as String);

  @override
  String get languageCode => (super.noSuchMethod(
        Invocation.getter(#languageCode),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#languageCode),
        ),
      ) as String);

  @override
  int? getInt(_i7.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  bool? getBool(_i7.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  double? getDouble(_i7.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(_i7.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  List<String>? getStringList(_i7.LocalStorageKeys? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  bool containsKey(_i7.LocalStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<bool> setInt(
    _i7.LocalStorageKeys? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setBool(
    _i7.LocalStorageKeys? key, {
    required bool? value,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [key],
          {#value: value},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setDouble(
    _i7.LocalStorageKeys? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setString(
    _i7.LocalStorageKeys? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setStringList(
    _i7.LocalStorageKeys? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<bool> remove(_i7.LocalStorageKeys? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setBiometricEnabled({bool? value}) => (super.noSuchMethod(
        Invocation.method(
          #setBiometricEnabled,
          [],
          {#value: value},
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> saveLoginResponse(_i44.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveLoginResponse,
          [authResponse],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [AppConfigurationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppConfigurationService extends _i1.Mock
    implements _i45.AppConfigurationService {
  MockAppConfigurationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<String> get getSupabaseUrl => (super.noSuchMethod(
        Invocation.getter(#getSupabaseUrl),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.getter(#getSupabaseUrl),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<String> get getSupabaseAnon => (super.noSuchMethod(
        Invocation.getter(#getSupabaseAnon),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.getter(#getSupabaseAnon),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<String> get getWhatsAppNumber => (super.noSuchMethod(
        Invocation.getter(#getWhatsAppNumber),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.getter(#getWhatsAppNumber),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<String> get getCatalogVersion => (super.noSuchMethod(
        Invocation.getter(#getCatalogVersion),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.getter(#getCatalogVersion),
        )),
      ) as _i19.Future<String>);

  @override
  String get getDefaultCurrency => (super.noSuchMethod(
        Invocation.getter(#getDefaultCurrency),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getDefaultCurrency),
        ),
      ) as String);

  @override
  String get getCashbackDiscount => (super.noSuchMethod(
        Invocation.getter(#getCashbackDiscount),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getCashbackDiscount),
        ),
      ) as String);

  @override
  _i19.Future<void> getAppConfigurations() => (super.noSuchMethod(
        Invocation.method(
          #getAppConfigurations,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [ReferralInfoService].
///
/// See the documentation for Mockito's code generation for more information.
class MockReferralInfoService extends _i1.Mock
    implements _i46.ReferralInfoService {
  MockReferralInfoService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get getReferralMessage => (super.noSuchMethod(
        Invocation.getter(#getReferralMessage),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getReferralMessage),
        ),
      ) as String);

  @override
  String get getReferralAmount => (super.noSuchMethod(
        Invocation.getter(#getReferralAmount),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getReferralAmount),
        ),
      ) as String);

  @override
  String get getReferralCurrency => (super.noSuchMethod(
        Invocation.getter(#getReferralCurrency),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getReferralCurrency),
        ),
      ) as String);

  @override
  String get getReferralAmountAndCurrency => (super.noSuchMethod(
        Invocation.getter(#getReferralAmountAndCurrency),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#getReferralAmountAndCurrency),
        ),
      ) as String);

  @override
  _i19.Future<void> refreshReferralInfo() => (super.noSuchMethod(
        Invocation.method(
          #refreshReferralInfo,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [FlutterChannelHandlerService].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterChannelHandlerService extends _i1.Mock
    implements _i13.FlutterChannelHandlerService {
  MockFlutterChannelHandlerService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> openSimProfilesSettings() => (super.noSuchMethod(
        Invocation.method(
          #openSimProfilesSettings,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> openEsimSetupForIOS({
    required String? smdpAddress,
    required String? activationCode,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openEsimSetupForIOS,
          [],
          {
            #smdpAddress: smdpAddress,
            #activationCode: activationCode,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> openEsimSetupForAndroid({
    required String? smdpAddress,
    required String? activationCode,
    bool? isSHAExist = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #openEsimSetupForAndroid,
          [],
          {
            #smdpAddress: smdpAddress,
            #activationCode: activationCode,
            #isSHAExist: isSHAExist,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [AnalyticsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAnalyticsService extends _i1.Mock implements _i8.AnalyticsService {
  MockAnalyticsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<void> configure({
    bool? firebaseAnalytics = true,
    bool? facebookAnalytics = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #configure,
          [],
          {
            #firebaseAnalytics: firebaseAnalytics,
            #facebookAnalytics: facebookAnalytics,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> logEvent({required _i8.AnalyticEvent? event}) =>
      (super.noSuchMethod(
        Invocation.method(
          #logEvent,
          [],
          {#event: event},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [ConnectivityService].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivityService extends _i1.Mock
    implements _i16.ConnectivityService {
  MockConnectivityService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void addListener(_i47.ConnectionListener? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i47.ConnectionListener? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);
}

/// A class which mocks [ApiAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiAuthRepository extends _i1.Mock implements _i48.ApiAuthRepository {
  MockApiAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> resendOtp({required String? email}) =>
      (super.noSuchMethod(Invocation.method(
        #resendOtp,
        [],
        {#email: email},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> verifyOtp({
    String? email,
    String? phoneNumber,
    String? pinCode = '',
    String? providerToken = '',
    String? providerType = '',
  }) =>
      (super.noSuchMethod(Invocation.method(
        #verifyOtp,
        [],
        {
          #email: email,
          #phoneNumber: phoneNumber,
          #pinCode: pinCode,
          #providerToken: providerToken,
          #providerType: providerType,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> updateUserInfo({
    required String? email,
    required String? msisdn,
    required String? firstName,
    required String? lastName,
    required bool? isNewsletterSubscribed,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #updateUserInfo,
        [],
        {
          #email: email,
          #msisdn: msisdn,
          #firstName: firstName,
          #lastName: lastName,
          #isNewsletterSubscribed: isNewsletterSubscribed,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<_i4.Resource<_i44.AuthResponseModel>>
      refreshTokenAPITrigger() => (super.noSuchMethod(
            Invocation.method(
              #refreshTokenAPITrigger,
              [],
            ),
            returnValue:
                _i19.Future<_i4.Resource<_i44.AuthResponseModel>>.value(
                    _FakeResource_2<_i44.AuthResponseModel>(
              this,
              Invocation.method(
                #refreshTokenAPITrigger,
                [],
              ),
            )),
          ) as _i19.FutureOr<_i4.Resource<_i44.AuthResponseModel>>);

  @override
  void addUnauthorizedAccessListener(
          _i49.UnauthorizedAccessListener? unauthorizedAccessCallBack) =>
      super.noSuchMethod(
        Invocation.method(
          #addUnauthorizedAccessListener,
          [unauthorizedAccessCallBack],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeUnauthorizedAccessListener(
          _i49.UnauthorizedAccessListener? unauthorizedAccessCallBack) =>
      super.noSuchMethod(
        Invocation.method(
          #removeUnauthorizedAccessListener,
          [unauthorizedAccessCallBack],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAuthReloadListenerCallBack(
          _i50.AuthReloadListener? authReloadListener) =>
      super.noSuchMethod(
        Invocation.method(
          #addAuthReloadListenerCallBack,
          [authReloadListener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeAuthReloadListenerCallBack(
          _i50.AuthReloadListener? authReloadListener) =>
      super.noSuchMethod(
        Invocation.method(
          #removeAuthReloadListenerCallBack,
          [authReloadListener],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ApiAppRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiAppRepository extends _i1.Mock implements _i5.ApiAppRepository {
  MockApiAppRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> addDevice({
    required String? fcmToken,
    required String? manufacturer,
    required String? deviceModel,
    required String? deviceOs,
    required String? deviceOsVersion,
    required String? appVersion,
    required String? ramSize,
    required String? screenResolution,
    required bool? isRooted,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #addDevice,
        [],
        {
          #fcmToken: fcmToken,
          #manufacturer: manufacturer,
          #deviceModel: deviceModel,
          #deviceOs: deviceOs,
          #deviceOsVersion: deviceOsVersion,
          #appVersion: appVersion,
          #ramSize: ramSize,
          #screenResolution: screenResolution,
          #isRooted: isRooted,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> contactUs({
    required String? email,
    required String? message,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #contactUs,
        [],
        {
          #email: email,
          #message: message,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.Future<void> resetBannerStream() => (super.noSuchMethod(
        Invocation.method(
          #resetBannerStream,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [APIBundles].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIBundles extends _i1.Mock implements _i51.APIBundles {
  MockAPIBundles() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> getBundleConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleConsumption,
        [],
        {#iccID: iccID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundle({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundle,
        [],
        {#code: code},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundlesByRegion({required String? regionCode}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [],
        {#regionCode: regionCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundlesByCountries(
          {required String? countryCodes}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountries,
        [],
        {#countryCodes: countryCodes},
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [ApiUser].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiUser extends _i1.Mock implements _i52.ApiUser {
  MockApiUser() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> getUserConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getUserConsumption,
        [],
        {#iccID: iccID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> assignBundle({
    required String? bundleCode,
    required String? promoCode,
    required String? referralCode,
    required String? affiliateCode,
    required String? paymentType,
    required _i53.RelatedSearchRequestModel? relatedSearch,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #assignBundle,
        [],
        {
          #bundleCode: bundleCode,
          #promoCode: promoCode,
          #referralCode: referralCode,
          #affiliateCode: affiliateCode,
          #paymentType: paymentType,
          #relatedSearch: relatedSearch,
          #bearerToken: bearerToken,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> topUpBundle({
    required String? iccID,
    required String? bundleCode,
    required String? paymentType,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpBundle,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
          #paymentType: paymentType,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getUserNotifications({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getUserNotifications,
        [],
        {
          #pageIndex: pageIndex,
          #pageSize: pageSize,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundleExists({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleExists,
        [],
        {#code: code},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundleLabel({
    required String? iccid,
    required String? label,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleLabel,
        [],
        {
          #iccid: iccid,
          #label: label,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getMyEsimByIccID({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByIccID,
        [],
        {#iccID: iccID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getMyEsimByOrder({
    required String? orderID,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByOrder,
        [],
        {
          #orderID: orderID,
          #bearerToken: bearerToken,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getRelatedTopUp({
    required String? iccID,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getRelatedTopUp,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getOrderHistory({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderHistory,
        [],
        {
          #pageIndex: pageIndex,
          #pageSize: pageSize,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getOrderByID({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderByID,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> topUpWallet({
    required double? amount,
    required String? currency,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpWallet,
        [],
        {
          #amount: amount,
          #currency: currency,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> cancelOrder({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #cancelOrder,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> resendOrderOtp({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #resendOrderOtp,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> verifyOrderOtp({
    required String? otp,
    required String? iccid,
    required String? orderID,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #verifyOrderOtp,
        [],
        {
          #otp: otp,
          #iccid: iccid,
          #orderID: orderID,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [ApiBundlesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiBundlesRepository extends _i1.Mock
    implements _i54.ApiBundlesRepository {
  MockApiBundlesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Stream<_i55.BundleServicesStreamModel> get homeDataStream =>
      (super.noSuchMethod(
        Invocation.getter(#homeDataStream),
        returnValue: _i19.Stream<_i55.BundleServicesStreamModel>.empty(),
      ) as _i19.Stream<_i55.BundleServicesStreamModel>);

  @override
  _i19.FutureOr<_i4.Resource<_i56.BundleConsumptionResponse?>>
      getBundleConsumption({required String? iccID}) => (super.noSuchMethod(
            Invocation.method(
              #getBundleConsumption,
              [],
              {#iccID: iccID},
            ),
            returnValue: _i19
                .Future<_i4.Resource<_i56.BundleConsumptionResponse?>>.value(
                _FakeResource_2<_i56.BundleConsumptionResponse?>(
              this,
              Invocation.method(
                #getBundleConsumption,
                [],
                {#iccID: iccID},
              ),
            )),
          ) as _i19.FutureOr<_i4.Resource<_i56.BundleConsumptionResponse?>>);

  @override
  _i19.FutureOr<dynamic> getBundle({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundle,
        [],
        {#code: code},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundlesByRegion({required String? regionCode}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [],
        {#regionCode: regionCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundlesByCountries(
          {required String? countryCodes}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountries,
        [],
        {#countryCodes: countryCodes},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<_i19.Stream<_i55.BundleServicesStreamModel>> getHomeData({
    required _i19.Future<_i55.HomeDataVersionResult>? version,
    bool? forceRefresh = false,
    bool? isFromRefresh = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getHomeData,
          [],
          {
            #version: version,
            #forceRefresh: forceRefresh,
            #isFromRefresh: isFromRefresh,
          },
        ),
        returnValue:
            _i19.Future<_i19.Stream<_i55.BundleServicesStreamModel>>.value(
                _i19.Stream<_i55.BundleServicesStreamModel>.empty()),
      ) as _i19.FutureOr<_i19.Stream<_i55.BundleServicesStreamModel>>);

  @override
  _i19.Future<void> clearCache() => (super.noSuchMethod(
        Invocation.method(
          #clearCache,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> dispose() => (super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [ApiUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiUserRepository extends _i1.Mock implements _i57.ApiUserRepository {
  MockApiUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> getUserConsumption({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getUserConsumption,
        [],
        {#iccID: iccID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> assignBundle({
    required String? bundleCode,
    required String? promoCode,
    required String? referralCode,
    required String? affiliateCode,
    required String? paymentType,
    required _i53.RelatedSearchRequestModel? relatedSearch,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #assignBundle,
        [],
        {
          #bundleCode: bundleCode,
          #promoCode: promoCode,
          #referralCode: referralCode,
          #affiliateCode: affiliateCode,
          #paymentType: paymentType,
          #relatedSearch: relatedSearch,
          #bearerToken: bearerToken,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> topUpBundle({
    required String? iccID,
    required String? bundleCode,
    required String? paymentType,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpBundle,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
          #paymentType: paymentType,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<
      _i4.Resource<List<_i58.UserNotificationModel>>> getUserNotifications({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserNotifications,
          [],
          {
            #pageIndex: pageIndex,
            #pageSize: pageSize,
          },
        ),
        returnValue:
            _i19.Future<_i4.Resource<List<_i58.UserNotificationModel>>>.value(
                _FakeResource_2<List<_i58.UserNotificationModel>>(
          this,
          Invocation.method(
            #getUserNotifications,
            [],
            {
              #pageIndex: pageIndex,
              #pageSize: pageSize,
            },
          ),
        )),
      ) as _i19.FutureOr<_i4.Resource<List<_i58.UserNotificationModel>>>);

  @override
  _i19.FutureOr<dynamic> getBundleExists({required String? code}) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleExists,
        [],
        {#code: code},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getBundleLabel({
    required String? iccid,
    required String? label,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getBundleLabel,
        [],
        {
          #iccid: iccid,
          #label: label,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getMyEsimByIccID({required String? iccID}) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByIccID,
        [],
        {#iccID: iccID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getMyEsimByOrder({
    required String? orderID,
    String? bearerToken,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getMyEsimByOrder,
        [],
        {
          #orderID: orderID,
          #bearerToken: bearerToken,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> getRelatedTopUp({
    required String? iccID,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #getRelatedTopUp,
        [],
        {
          #iccID: iccID,
          #bundleCode: bundleCode,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<
      _i4.Resource<List<_i59.OrderHistoryResponseModel>?>> getOrderHistory({
    required int? pageIndex,
    required int? pageSize,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderHistory,
          [],
          {
            #pageIndex: pageIndex,
            #pageSize: pageSize,
          },
        ),
        returnValue: _i19
            .Future<_i4.Resource<List<_i59.OrderHistoryResponseModel>?>>.value(
            _FakeResource_2<List<_i59.OrderHistoryResponseModel>?>(
          this,
          Invocation.method(
            #getOrderHistory,
            [],
            {
              #pageIndex: pageIndex,
              #pageSize: pageSize,
            },
          ),
        )),
      ) as _i19.FutureOr<_i4.Resource<List<_i59.OrderHistoryResponseModel>?>>);

  @override
  _i19.FutureOr<dynamic> getOrderByID({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #getOrderByID,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> topUpWallet({
    required double? amount,
    required String? currency,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #topUpWallet,
        [],
        {
          #amount: amount,
          #currency: currency,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> cancelOrder({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #cancelOrder,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> resendOrderOtp({required String? orderID}) =>
      (super.noSuchMethod(Invocation.method(
        #resendOrderOtp,
        [],
        {#orderID: orderID},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> verifyOrderOtp({
    required String? otp,
    required String? iccid,
    required String? orderID,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #verifyOrderOtp,
        [],
        {
          #otp: otp,
          #iccid: iccid,
          #orderID: orderID,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [ApiDeviceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiDeviceRepository extends _i1.Mock
    implements _i60.ApiDeviceRepository {
  MockApiDeviceRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> registerDevice({
    required String? fcmToken,
    required String? deviceId,
    required String? platformTag,
    required String? osTag,
    required String? appGuid,
    required String? version,
    required String? userGuid,
    required _i61.DeviceInfoRequestModel? deviceInfo,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #registerDevice,
        [],
        {
          #fcmToken: fcmToken,
          #deviceId: deviceId,
          #platformTag: platformTag,
          #osTag: osTag,
          #appGuid: appGuid,
          #version: version,
          #userGuid: userGuid,
          #deviceInfo: deviceInfo,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [APIPromotion].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIPromotion extends _i1.Mock implements _i62.APIPromotion {
  MockAPIPromotion() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> redeemVoucher({required String? voucherCode}) =>
      (super.noSuchMethod(Invocation.method(
        #redeemVoucher,
        [],
        {#voucherCode: voucherCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> applyReferralCode({required String? referralCode}) =>
      (super.noSuchMethod(Invocation.method(
        #applyReferralCode,
        [],
        {#referralCode: referralCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> validatePromoCode({
    required String? promoCode,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #validatePromoCode,
        [],
        {
          #promoCode: promoCode,
          #bundleCode: bundleCode,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [ApiPromotionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiPromotionRepository extends _i1.Mock
    implements _i63.ApiPromotionRepository {
  MockApiPromotionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> redeemVoucher({required String? voucherCode}) =>
      (super.noSuchMethod(Invocation.method(
        #redeemVoucher,
        [],
        {#voucherCode: voucherCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> applyReferralCode({required String? referralCode}) =>
      (super.noSuchMethod(Invocation.method(
        #applyReferralCode,
        [],
        {#referralCode: referralCode},
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> validatePromoCode({
    required String? promoCode,
    required String? bundleCode,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #validatePromoCode,
        [],
        {
          #promoCode: promoCode,
          #bundleCode: bundleCode,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [GetAboutUsUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetAboutUsUseCase extends _i1.Mock implements _i64.GetAboutUsUseCase {
  MockGetAboutUsUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ApiAppRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApiAppRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.ApiAppRepository);

  @override
  _i19.FutureOr<_i4.Resource<_i65.DynamicPageResponse?>> execute(
          _i66.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i19.Future<_i4.Resource<_i65.DynamicPageResponse?>>.value(
            _FakeResource_2<_i65.DynamicPageResponse?>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i19.FutureOr<_i4.Resource<_i65.DynamicPageResponse?>>);
}

/// A class which mocks [GetBannerUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetBannerUseCase extends _i1.Mock implements _i24.GetBannerUseCase {
  MockGetBannerUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ApiAppRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApiAppRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.ApiAppRepository);

  @override
  _i6.ValueStream<_i4.Resource<List<_i67.BannerResponseModel>?>> execute(
          _i66.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue:
            _FakeValueStream_4<_i4.Resource<List<_i67.BannerResponseModel>?>>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        ),
      ) as _i6.ValueStream<_i4.Resource<List<_i67.BannerResponseModel>?>>);

  @override
  _i19.Future<void> resetBannerStream() => (super.noSuchMethod(
        Invocation.method(
          #resetBannerStream,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [GetTermsAndConditionUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTermsAndConditionUseCase extends _i1.Mock
    implements _i68.GetTermsAndConditionUseCase {
  MockGetTermsAndConditionUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.ApiAppRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApiAppRepository_3(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i5.ApiAppRepository);

  @override
  _i19.FutureOr<_i4.Resource<_i65.DynamicPageResponse?>> execute(
          _i66.NoParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [params],
        ),
        returnValue: _i19.Future<_i4.Resource<_i65.DynamicPageResponse?>>.value(
            _FakeResource_2<_i65.DynamicPageResponse?>(
          this,
          Invocation.method(
            #execute,
            [params],
          ),
        )),
      ) as _i19.FutureOr<_i4.Resource<_i65.DynamicPageResponse?>>);
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i15.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get previousRoute => (super.noSuchMethod(
        Invocation.getter(#previousRoute),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#previousRoute),
        ),
      ) as String);

  @override
  String get currentRoute => (super.noSuchMethod(
        Invocation.getter(#currentRoute),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#currentRoute),
        ),
      ) as String);

  @override
  _i23.GlobalKey<_i23.NavigatorState>? nestedNavigationKey(int? index) =>
      (super.noSuchMethod(Invocation.method(
        #nestedNavigationKey,
        [index],
      )) as _i23.GlobalKey<_i23.NavigatorState>?);

  @override
  void config({
    bool? enableLog,
    bool? defaultPopGesture,
    bool? defaultOpaqueRoute,
    Duration? defaultDurationTransition,
    bool? defaultGlobalState,
    _i15.Transition? defaultTransitionStyle,
    String? defaultTransition,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #config,
          [],
          {
            #enableLog: enableLog,
            #defaultPopGesture: defaultPopGesture,
            #defaultOpaqueRoute: defaultOpaqueRoute,
            #defaultDurationTransition: defaultDurationTransition,
            #defaultGlobalState: defaultGlobalState,
            #defaultTransitionStyle: defaultTransitionStyle,
            #defaultTransition: defaultTransition,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T?>? navigateWithTransition<T>(
    _i23.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i23.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i15.Transition? transitionClass,
    _i15.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateWithTransition,
        [page],
        {
          #opaque: opaque,
          #transition: transition,
          #duration: duration,
          #popGesture: popGesture,
          #id: id,
          #curve: curve,
          #fullscreenDialog: fullscreenDialog,
          #preventDuplicates: preventDuplicates,
          #transitionClass: transitionClass,
          #transitionStyle: transitionStyle,
          #routeName: routeName,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? replaceWithTransition<T>(
    _i23.Widget? page, {
    bool? opaque,
    String? transition = '',
    Duration? duration,
    bool? popGesture,
    int? id,
    _i23.Curve? curve,
    bool? fullscreenDialog = false,
    bool? preventDuplicates = true,
    _i15.Transition? transitionClass,
    _i15.Transition? transitionStyle,
    String? routeName,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #replaceWithTransition,
        [page],
        {
          #opaque: opaque,
          #transition: transition,
          #duration: duration,
          #popGesture: popGesture,
          #id: id,
          #curve: curve,
          #fullscreenDialog: fullscreenDialog,
          #preventDuplicates: preventDuplicates,
          #transitionClass: transitionClass,
          #transitionStyle: transitionStyle,
          #routeName: routeName,
        },
      )) as _i19.Future<T?>?);

  @override
  bool back<T>({
    dynamic result,
    int? id,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #back,
          [],
          {
            #result: result,
            #id: id,
          },
        ),
        returnValue: false,
      ) as bool);

  @override
  void popUntil(
    _i23.RoutePredicate? predicate, {
    int? id,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #popUntil,
          [predicate],
          {#id: id},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void popRepeated(int? popTimes) => super.noSuchMethod(
        Invocation.method(
          #popRepeated,
          [popTimes],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T?>? navigateTo<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i23.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateTo,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
          #transition: transition,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? navigateToView<T>(
    _i23.Widget? view, {
    dynamic arguments,
    int? id,
    bool? opaque,
    _i23.Curve? curve,
    Duration? duration,
    bool? fullscreenDialog = false,
    bool? popGesture,
    bool? preventDuplicates = true,
    _i15.Transition? transition,
    _i15.Transition? transitionStyle,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #navigateToView,
        [view],
        {
          #arguments: arguments,
          #id: id,
          #opaque: opaque,
          #curve: curve,
          #duration: duration,
          #fullscreenDialog: fullscreenDialog,
          #popGesture: popGesture,
          #preventDuplicates: preventDuplicates,
          #transition: transition,
          #transitionStyle: transitionStyle,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? replaceWith<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
    _i23.RouteTransitionsBuilder? transition,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #replaceWith,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
          #transition: transition,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? clearStackAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearStackAndShow,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #parameters: parameters,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? clearStackAndShowView<T>(
    _i23.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearStackAndShowView,
        [view],
        {
          #arguments: arguments,
          #id: id,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? clearTillFirstAndShow<T>(
    String? routeName, {
    dynamic arguments,
    int? id,
    bool? preventDuplicates = true,
    Map<String, String>? parameters,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearTillFirstAndShow,
        [routeName],
        {
          #arguments: arguments,
          #id: id,
          #preventDuplicates: preventDuplicates,
          #parameters: parameters,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? clearTillFirstAndShowView<T>(
    _i23.Widget? view, {
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #clearTillFirstAndShowView,
        [view],
        {
          #arguments: arguments,
          #id: id,
        },
      )) as _i19.Future<T?>?);

  @override
  _i19.Future<T?>? pushNamedAndRemoveUntil<T>(
    String? routeName, {
    _i23.RoutePredicate? predicate,
    dynamic arguments,
    int? id,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #pushNamedAndRemoveUntil,
        [routeName],
        {
          #predicate: predicate,
          #arguments: arguments,
          #id: id,
        },
      )) as _i19.Future<T?>?);
}

/// A class which mocks [DialogService].
///
/// See the documentation for Mockito's code generation for more information.
class MockDialogService extends _i1.Mock implements _i15.DialogService {
  MockDialogService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void registerCustomDialogBuilders(
          Map<dynamic, _i15.DialogBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomDialogBuilder({
    required dynamic variant,
    required _i23.Widget Function(
      _i23.BuildContext,
      _i15.DialogRequest<dynamic>,
      dynamic Function(_i15.DialogResponse<dynamic>),
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomDialogBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<_i15.DialogResponse<dynamic>?> showDialog({
    String? title,
    String? description,
    String? cancelTitle,
    _i14.Color? cancelTitleColor,
    String? buttonTitle = 'Ok',
    _i14.Color? buttonTitleColor,
    bool? barrierDismissible = false,
    _i23.RouteSettings? routeSettings,
    _i23.GlobalKey<_i23.NavigatorState>? navigatorKey,
    _i15.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #buttonTitle: buttonTitle,
            #buttonTitleColor: buttonTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i19.Future<_i15.DialogResponse<dynamic>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<dynamic>?>);

  @override
  _i19.Future<_i15.DialogResponse<T>?> showCustomDialog<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i14.Color? barrierColor = const _i14.Color(2315255808),
    bool? barrierDismissible = false,
    String? barrierLabel = '',
    bool? useSafeArea = true,
    _i23.RouteSettings? routeSettings,
    _i23.GlobalKey<_i23.NavigatorState>? navigatorKey,
    _i23.RouteTransitionsBuilder? transitionBuilder,
    dynamic customData,
    R? data,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomDialog,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #barrierDismissible: barrierDismissible,
            #barrierLabel: barrierLabel,
            #useSafeArea: useSafeArea,
            #routeSettings: routeSettings,
            #navigatorKey: navigatorKey,
            #transitionBuilder: transitionBuilder,
            #customData: customData,
            #data: data,
          },
        ),
        returnValue: _i19.Future<_i15.DialogResponse<T>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<T>?>);

  @override
  _i19.Future<_i15.DialogResponse<dynamic>?> showConfirmationDialog({
    String? title,
    String? description,
    String? cancelTitle = 'Cancel',
    _i14.Color? cancelTitleColor,
    String? confirmationTitle = 'Ok',
    _i14.Color? confirmationTitleColor,
    bool? barrierDismissible = false,
    _i23.RouteSettings? routeSettings,
    _i15.DialogPlatform? dialogPlatform,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showConfirmationDialog,
          [],
          {
            #title: title,
            #description: description,
            #cancelTitle: cancelTitle,
            #cancelTitleColor: cancelTitleColor,
            #confirmationTitle: confirmationTitle,
            #confirmationTitleColor: confirmationTitleColor,
            #barrierDismissible: barrierDismissible,
            #routeSettings: routeSettings,
            #dialogPlatform: dialogPlatform,
          },
        ),
        returnValue: _i19.Future<_i15.DialogResponse<dynamic>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<dynamic>?>);

  @override
  void completeDialog(_i15.DialogResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeDialog,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [SnackbarService].
///
/// See the documentation for Mockito's code generation for more information.
class MockSnackbarService extends _i1.Mock implements _i15.SnackbarService {
  MockSnackbarService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isSnackbarOpen => (super.noSuchMethod(
        Invocation.getter(#isSnackbarOpen),
        returnValue: false,
      ) as bool);

  @override
  void registerSnackbarConfig(_i15.SnackbarConfig? config) =>
      super.noSuchMethod(
        Invocation.method(
          #registerSnackbarConfig,
          [config],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomMainButtonBuilder({
    dynamic variant,
    _i23.Widget Function(
      String?,
      Function?,
    )? builder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomMainButtonBuilder,
          [],
          {
            #variant: variant,
            #builder: builder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void registerCustomSnackbarConfig({
    required dynamic variant,
    _i15.SnackbarConfig? config,
    _i15.SnackbarConfig Function()? configBuilder,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerCustomSnackbarConfig,
          [],
          {
            #variant: variant,
            #config: config,
            #configBuilder: configBuilder,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void showSnackbar({
    String? title = '',
    required String? message,
    dynamic Function(dynamic)? onTap,
    Duration? duration,
    String? mainButtonTitle,
    void Function()? onMainButtonTapped,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #showSnackbar,
          [],
          {
            #title: title,
            #message: message,
            #onTap: onTap,
            #duration: duration,
            #mainButtonTitle: mainButtonTitle,
            #onMainButtonTapped: onMainButtonTapped,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<dynamic>? showCustomSnackBar({
    required String? message,
    _i23.TextStyle? messageTextStyle,
    required dynamic variant,
    String? title,
    _i23.TextStyle? titleTextStyle,
    String? mainButtonTitle,
    _i23.ButtonStyle? mainButtonStyle,
    void Function()? onMainButtonTapped,
    Function? onTap,
    Duration? duration,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #showCustomSnackBar,
        [],
        {
          #message: message,
          #messageTextStyle: messageTextStyle,
          #variant: variant,
          #title: title,
          #titleTextStyle: titleTextStyle,
          #mainButtonTitle: mainButtonTitle,
          #mainButtonStyle: mainButtonStyle,
          #onMainButtonTapped: onMainButtonTapped,
          #onTap: onTap,
          #duration: duration,
        },
      )) as _i19.Future<dynamic>?);

  @override
  _i19.Future<void> closeSnackbar() => (super.noSuchMethod(
        Invocation.method(
          #closeSnackbar,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [BottomSheetService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBottomSheetService extends _i1.Mock
    implements _i15.BottomSheetService {
  MockBottomSheetService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void setCustomSheetBuilders(Map<dynamic, _i15.SheetBuilder>? builders) =>
      super.noSuchMethod(
        Invocation.method(
          #setCustomSheetBuilders,
          [builders],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<_i15.SheetResponse<dynamic>?> showBottomSheet({
    required String? title,
    String? description,
    String? confirmButtonTitle = 'Ok',
    String? cancelButtonTitle,
    bool? enableDrag = true,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
    double? elevation = 1.0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showBottomSheet,
          [],
          {
            #title: title,
            #description: description,
            #confirmButtonTitle: confirmButtonTitle,
            #cancelButtonTitle: cancelButtonTitle,
            #enableDrag: enableDrag,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
            #elevation: elevation,
          },
        ),
        returnValue: _i19.Future<_i15.SheetResponse<dynamic>?>.value(),
      ) as _i19.Future<_i15.SheetResponse<dynamic>?>);

  @override
  _i19.Future<_i15.SheetResponse<T>?> showCustomSheet<T, R>({
    dynamic variant,
    String? title,
    String? description,
    bool? hasImage = false,
    String? imageUrl,
    bool? showIconInMainButton = false,
    String? mainButtonTitle,
    bool? showIconInSecondaryButton = false,
    String? secondaryButtonTitle,
    bool? showIconInAdditionalButton = false,
    String? additionalButtonTitle,
    bool? takesInput = false,
    _i14.Color? barrierColor = const _i14.Color(2315255808),
    double? elevation = 1.0,
    bool? barrierDismissible = true,
    bool? isScrollControlled = false,
    String? barrierLabel = '',
    dynamic customData,
    R? data,
    bool? enableDrag = true,
    Duration? exitBottomSheetDuration,
    Duration? enterBottomSheetDuration,
    bool? ignoreSafeArea,
    bool? useRootNavigator = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showCustomSheet,
          [],
          {
            #variant: variant,
            #title: title,
            #description: description,
            #hasImage: hasImage,
            #imageUrl: imageUrl,
            #showIconInMainButton: showIconInMainButton,
            #mainButtonTitle: mainButtonTitle,
            #showIconInSecondaryButton: showIconInSecondaryButton,
            #secondaryButtonTitle: secondaryButtonTitle,
            #showIconInAdditionalButton: showIconInAdditionalButton,
            #additionalButtonTitle: additionalButtonTitle,
            #takesInput: takesInput,
            #barrierColor: barrierColor,
            #elevation: elevation,
            #barrierDismissible: barrierDismissible,
            #isScrollControlled: isScrollControlled,
            #barrierLabel: barrierLabel,
            #customData: customData,
            #data: data,
            #enableDrag: enableDrag,
            #exitBottomSheetDuration: exitBottomSheetDuration,
            #enterBottomSheetDuration: enterBottomSheetDuration,
            #ignoreSafeArea: ignoreSafeArea,
            #useRootNavigator: useRootNavigator,
          },
        ),
        returnValue: _i19.Future<_i15.SheetResponse<T>?>.value(),
      ) as _i19.Future<_i15.SheetResponse<T>?>);

  @override
  void completeSheet(_i15.SheetResponse<dynamic>? response) =>
      super.noSuchMethod(
        Invocation.method(
          #completeSheet,
          [response],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ThemeService].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeService extends _i1.Mock implements _i9.ThemeService {
  MockThemeService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get themeCount => (super.noSuchMethod(
        Invocation.getter(#themeCount),
        returnValue: 0,
      ) as int);

  @override
  bool get isDarkMode => (super.noSuchMethod(
        Invocation.getter(#isDarkMode),
        returnValue: false,
      ) as bool);

  @override
  _i9.ThemeManagerMode get selectedThemeMode => (super.noSuchMethod(
        Invocation.getter(#selectedThemeMode),
        returnValue: _i9.ThemeManagerMode.light,
      ) as _i9.ThemeManagerMode);

  @override
  void setThemeManager(_i69.ThemeManager? manager) => super.noSuchMethod(
        Invocation.method(
          #setThemeManager,
          [manager],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<dynamic> selectThemeAtIndex(int? themeIndex) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectThemeAtIndex,
          [themeIndex],
        ),
        returnValue: _i19.Future<dynamic>.value(),
      ) as _i19.Future<dynamic>);

  @override
  void toggleDarkLightTheme() => super.noSuchMethod(
        Invocation.method(
          #toggleDarkLightTheme,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemeMode(_i9.ThemeManagerMode? themeManagerMode) =>
      super.noSuchMethod(
        Invocation.method(
          #setThemeMode,
          [themeManagerMode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setThemes({
    _i23.ThemeData? lightTheme,
    _i23.ThemeData? darkTheme,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setThemes,
          [],
          {
            #lightTheme: lightTheme,
            #darkTheme: darkTheme,
          },
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AndroidUserGuideViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockAndroidUserGuideViewModel extends _i1.Mock
    implements _i70.AndroidUserGuideViewModel {
  MockAndroidUserGuideViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> scanFromQr() => (super.noSuchMethod(
        Invocation.method(
          #scanFromQr,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> scanFromGallery() => (super.noSuchMethod(
        Invocation.method(
          #scanFromGallery,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [MainViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMainViewModel extends _i1.Mock implements _i76.MainViewModel {
  MockMainViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> onModelReady() => (super.noSuchMethod(
        Invocation.method(
          #onModelReady,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i14.Locale getDefaultLocale() => (super.noSuchMethod(
        Invocation.method(
          #getDefaultLocale,
          [],
        ),
        returnValue: _FakeLocale_22(
          this,
          Invocation.method(
            #getDefaultLocale,
            [],
          ),
        ),
      ) as _i14.Locale);

  @override
  _i14.Locale getLocale(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #getLocale,
          [context],
        ),
        returnValue: _FakeLocale_22(
          this,
          Invocation.method(
            #getLocale,
            [context],
          ),
        ),
      ) as _i14.Locale);

  @override
  _i19.Future<void> onUnauthorizedAccessCallBackUseCase(
    _i37.BaseResponse? response,
    Exception? e,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onUnauthorizedAccessCallBackUseCase,
          [
            response,
            e,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onAuthReloadListenerCallBackUseCase(
          _i77.ResponseMain<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #onAuthReloadListenerCallBackUseCase,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i14.Locale> getLocaleList() => (super.noSuchMethod(
        Invocation.method(
          #getLocaleList,
          [],
        ),
        returnValue: <_i14.Locale>[],
      ) as List<_i14.Locale>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [MyESimViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMyESimViewModel extends _i1.Mock implements _i22.MyESimViewModel {
  MockMyESimViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i20.GetUserNotificationsUseCase get getUserNotificationsUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#getUserNotificationsUseCase),
        returnValue: _FakeGetUserNotificationsUseCase_23(
          this,
          Invocation.getter(#getUserNotificationsUseCase),
        ),
      ) as _i20.GetUserNotificationsUseCase);

  @override
  _i21.GetBundleLabelUseCase get getBundleLabelUseCase => (super.noSuchMethod(
        Invocation.getter(#getBundleLabelUseCase),
        returnValue: _FakeGetBundleLabelUseCase_24(
          this,
          Invocation.getter(#getBundleLabelUseCase),
        ),
      ) as _i21.GetBundleLabelUseCase);

  @override
  _i22.ESimState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeESimState_25(
          this,
          Invocation.getter(#state),
        ),
      ) as _i22.ESimState);

  @override
  bool get isInstallationFailed => (super.noSuchMethod(
        Invocation.getter(#isInstallationFailed),
        returnValue: false,
      ) as bool);

  @override
  set isInstallationFailed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isInstallationFailed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set setTabIndex(int? index) => super.noSuchMethod(
        Invocation.setter(
          #setTabIndex,
          index,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void openDataPlans() => super.noSuchMethod(
        Invocation.method(
          #openDataPlans,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notificationsButtonTapped() => super.noSuchMethod(
        Invocation.method(
          #notificationsButtonTapped,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onTopUpClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onTopUpClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConsumptionClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConsumptionClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onQrCodeClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onQrCodeClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onInstallClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onInstallClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onEditNameClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onEditNameClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToLoading(String? orderID) => (super.noSuchMethod(
        Invocation.method(
          #navigateToLoading,
          [orderID],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onCurrentBundleClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onCurrentBundleClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onExpiredBundleClick({required String? iccid}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onExpiredBundleClick,
          [],
          {#iccid: iccid},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshCurrentPlans() => (super.noSuchMethod(
        Invocation.method(
          #refreshCurrentPlans,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleNotificationBadge() => (super.noSuchMethod(
        Invocation.method(
          #handleNotificationBadge,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshScreen({bool? isSilent = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshScreen,
          [],
          {#isSilent: isSilent},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> fetchESimData({bool? isSilent = true}) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchESimData,
          [],
          {#isSilent: isSilent},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [ProfileViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockProfileViewModel extends _i1.Mock implements _i78.ProfileViewModel {
  MockProfileViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get appVersion => (super.noSuchMethod(
        Invocation.getter(#appVersion),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#appVersion),
        ),
      ) as String);

  @override
  String get buildNumber => (super.noSuchMethod(
        Invocation.getter(#buildNumber),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#buildNumber),
        ),
      ) as String);

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> getPackageInfo() => (super.noSuchMethod(
        Invocation.method(
          #getPackageInfo,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> loginButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #loginButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  String getUserName() => (super.noSuchMethod(
        Invocation.method(
          #getUserName,
          [],
        ),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.method(
            #getUserName,
            [],
          ),
        ),
      ) as String);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [DataPlansViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDataPlansViewModel extends _i1.Mock
    implements _i79.DataPlansViewModel {
  MockDataPlansViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i23.TextEditingController get searchTextFieldController =>
      (super.noSuchMethod(
        Invocation.getter(#searchTextFieldController),
        returnValue: _FakeTextEditingController_26(
          this,
          Invocation.getter(#searchTextFieldController),
        ),
      ) as _i23.TextEditingController);

  @override
  _i20.GetUserNotificationsUseCase get getUserNotificationsUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#getUserNotificationsUseCase),
        returnValue: _FakeGetUserNotificationsUseCase_23(
          this,
          Invocation.getter(#getUserNotificationsUseCase),
        ),
      ) as _i20.GetUserNotificationsUseCase);

  @override
  bool get showNotificationBadge => (super.noSuchMethod(
        Invocation.getter(#showNotificationBadge),
        returnValue: false,
      ) as bool);

  @override
  List<_i80.CountryResponseModel> get filteredCountries => (super.noSuchMethod(
        Invocation.getter(#filteredCountries),
        returnValue: <_i80.CountryResponseModel>[],
      ) as List<_i80.CountryResponseModel>);

  @override
  List<_i81.RegionsResponseModel> get filteredRegions => (super.noSuchMethod(
        Invocation.getter(#filteredRegions),
        returnValue: <_i81.RegionsResponseModel>[],
      ) as List<_i81.RegionsResponseModel>);

  @override
  List<_i73.BundleResponseModel> get filteredBundles => (super.noSuchMethod(
        Invocation.getter(#filteredBundles),
        returnValue: <_i73.BundleResponseModel>[],
      ) as List<_i73.BundleResponseModel>);

  @override
  List<_i73.BundleResponseModel> get filteredCruiseBundles =>
      (super.noSuchMethod(
        Invocation.getter(#filteredCruiseBundles),
        returnValue: <_i73.BundleResponseModel>[],
      ) as List<_i73.BundleResponseModel>);

  @override
  _i24.GetBannerUseCase get getBannerUseCase => (super.noSuchMethod(
        Invocation.getter(#getBannerUseCase),
        returnValue: _FakeGetBannerUseCase_27(
          this,
          Invocation.getter(#getBannerUseCase),
        ),
      ) as _i24.GetBannerUseCase);

  @override
  bool get showBanner => (super.noSuchMethod(
        Invocation.getter(#showBanner),
        returnValue: false,
      ) as bool);

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void processBanners(_i4.Resource<List<_i67.BannerResponseModel>?>? banners) =>
      super.noSuchMethod(
        Invocation.method(
          #processBanners,
          [banners],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onTabBarChange(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onTabBarChange,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onCruiseTabBarChange(int? newIndex) => super.noSuchMethod(
        Invocation.method(
          #onCruiseTabBarChange,
          [newIndex],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> loginButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #loginButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> notificationsButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #notificationsButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> fetchInitialData() => (super.noSuchMethod(
        Invocation.method(
          #fetchInitialData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToCountryBundles(
          _i80.CountryResponseModel? country) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToCountryBundles,
          [country],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToCountryBundleByID(String? countryCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToCountryBundleByID,
          [countryCode],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToRegionBundles(
          _i81.RegionsResponseModel? region) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToRegionBundles,
          [region],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToRegionBundleByID(String? regionCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToRegionBundleByID,
          [regionCode],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToEsimDetail(_i73.BundleResponseModel? bundle) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToEsimDetail,
          [bundle],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleNotificationBadge() => (super.noSuchMethod(
        Invocation.method(
          #handleNotificationBadge,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool isBundleServicesBusy() => (super.noSuchMethod(
        Invocation.method(
          #isBundleServicesBusy,
          [],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [HomePagerViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePagerViewModel extends _i1.Mock
    implements _i82.HomePagerViewModel {
  MockHomePagerViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i25.LockableTabController get tabController => (super.noSuchMethod(
        Invocation.getter(#tabController),
        returnValue: _FakeLockableTabController_28(
          this,
          Invocation.getter(#tabController),
        ),
      ) as _i25.LockableTabController);

  @override
  set redirection(_i43.InAppRedirection? value) => super.noSuchMethod(
        Invocation.setter(
          #redirection,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set tabController(_i25.LockableTabController? controller) =>
      super.noSuchMethod(
        Invocation.setter(
          #tabController,
          controller,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lockTabBar(bool? lock) => super.noSuchMethod(
        Invocation.setter(
          #lockTabBar,
          lock,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void changeSelectedTabIndex({required int? index}) => super.noSuchMethod(
        Invocation.method(
          #changeSelectedTabIndex,
          [],
          {#index: index},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRelatedListeners({required _i23.BuildContext? context}) =>
      super.noSuchMethod(
        Invocation.method(
          #setRelatedListeners,
          [],
          {#context: context},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [StartUpViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockStartUpViewModel extends _i1.Mock implements _i83.StartUpViewModel {
  MockStartUpViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i26.RefreshTokenUseCase get refreshTokenUseCase => (super.noSuchMethod(
        Invocation.getter(#refreshTokenUseCase),
        returnValue: _FakeRefreshTokenUseCase_29(
          this,
          Invocation.getter(#refreshTokenUseCase),
        ),
      ) as _i26.RefreshTokenUseCase);

  @override
  _i27.PushNotificationService get pushNotificationService =>
      (super.noSuchMethod(
        Invocation.getter(#pushNotificationService),
        returnValue: _FakePushNotificationService_30(
          this,
          Invocation.getter(#pushNotificationService),
        ),
      ) as _i27.PushNotificationService);

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> handleStartUpLogic(_i23.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleStartUpLogic,
          [context],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showDeviceCompromisedDialog(_i23.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #showDeviceCompromisedDialog,
          [context],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<bool> checkIfDeviceCompatible(_i23.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #checkIfDeviceCompatible,
          [context],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> getInitialRoute() => (super.noSuchMethod(
        Invocation.method(
          #getInitialRoute,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshTokenTrigger() => (super.noSuchMethod(
        Invocation.method(
          #refreshTokenTrigger,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [ContinueWithEmailViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockContinueWithEmailViewModel extends _i1.Mock
    implements _i84.ContinueWithEmailViewModel {
  MockContinueWithEmailViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i28.LoginUseCase get loginUseCase => (super.noSuchMethod(
        Invocation.getter(#loginUseCase),
        returnValue: _FakeLoginUseCase_31(
          this,
          Invocation.getter(#loginUseCase),
        ),
      ) as _i28.LoginUseCase);

  @override
  _i29.PhoneController get phoneController => (super.noSuchMethod(
        Invocation.getter(#phoneController),
        returnValue: _FakePhoneController_32(
          this,
          Invocation.getter(#phoneController),
        ),
      ) as _i29.PhoneController);

  @override
  bool get showEmailField => (super.noSuchMethod(
        Invocation.getter(#showEmailField),
        returnValue: false,
      ) as bool);

  @override
  bool get showPhoneField => (super.noSuchMethod(
        Invocation.getter(#showPhoneField),
        returnValue: false,
      ) as bool);

  @override
  set redirection(_i43.InAppRedirection? value) => super.noSuchMethod(
        Invocation.setter(
          #redirection,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phoneController(_i29.PhoneController? value) => super.noSuchMethod(
        Invocation.setter(
          #phoneController,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void validateNumber({
    required String? code,
    required String? number,
    required bool? isValid,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #validateNumber,
          [],
          {
            #code: code,
            #number: number,
            #isValid: isValid,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void>? loginButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #loginButtonTapped,
          [],
        ),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>?);

  @override
  void updateTermsSelections() => super.noSuchMethod(
        Invocation.method(
          #updateTermsSelections,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  String validateEmailAddress(String? text) => (super.noSuchMethod(
        Invocation.method(
          #validateEmailAddress,
          [text],
        ),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.method(
            #validateEmailAddress,
            [text],
          ),
        ),
      ) as String);

  @override
  void backButtonTapped() => super.noSuchMethod(
        Invocation.method(
          #backButtonTapped,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void>? showTermsSheet() => (super.noSuchMethod(
        Invocation.method(
          #showTermsSheet,
          [],
        ),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>?);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [PurchaseLoadingViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockPurchaseLoadingViewModel extends _i1.Mock
    implements _i85.PurchaseLoadingViewModel {
  MockPurchaseLoadingViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isApiFetched => (super.noSuchMethod(
        Invocation.getter(#isApiFetched),
        returnValue: false,
      ) as bool);

  @override
  set orderID(String? value) => super.noSuchMethod(
        Invocation.setter(
          #orderID,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set bearerToken(String? value) => super.noSuchMethod(
        Invocation.setter(
          #bearerToken,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isApiFetched(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isApiFetched,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> startTimer() => (super.noSuchMethod(
        Invocation.method(
          #startTimer,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> getOrderDetails() => (super.noSuchMethod(
        Invocation.method(
          #getOrderDetails,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [DeviceCompabilityCheckViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockDeviceCompabilityCheckViewModel extends _i1.Mock
    implements _i86.DeviceCompabilityCheckViewModel {
  MockDeviceCompabilityCheckViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i86.DeviceCompatibleType get deviceCompatibleType => (super.noSuchMethod(
        Invocation.getter(#deviceCompatibleType),
        returnValue: _i86.DeviceCompatibleType.loading,
      ) as _i86.DeviceCompatibleType);

  @override
  set deviceCompatibleType(_i86.DeviceCompatibleType? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #deviceCompatibleType,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onViewModelReady() => (super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> startChecking() => (super.noSuchMethod(
        Invocation.method(
          #startChecking,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [LoginViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginViewModel extends _i1.Mock implements _i87.LoginViewModel {
  MockLoginViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i30.SocialLoginService get socialLoginService => (super.noSuchMethod(
        Invocation.getter(#socialLoginService),
        returnValue: _FakeSocialLoginService_33(
          this,
          Invocation.getter(#socialLoginService),
        ),
      ) as _i30.SocialLoginService);

  @override
  _i31.SocialMediaVerifyLoginUseCase get socialMediaVerifyLoginUseCase =>
      (super.noSuchMethod(
        Invocation.getter(#socialMediaVerifyLoginUseCase),
        returnValue: _FakeSocialMediaVerifyLoginUseCase_34(
          this,
          Invocation.getter(#socialMediaVerifyLoginUseCase),
        ),
      ) as _i31.SocialMediaVerifyLoginUseCase);

  @override
  set redirection(_i43.InAppRedirection? value) => super.noSuchMethod(
        Invocation.setter(
          #redirection,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> initializeListener() => (super.noSuchMethod(
        Invocation.method(
          #initializeListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> backButtonPressed() => (super.noSuchMethod(
        Invocation.method(
          #backButtonPressed,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> navigateToSignInPage() => (super.noSuchMethod(
        Invocation.method(
          #navigateToSignInPage,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> socialMediaSignInAction(
          _i30.SocialMediaLoginType? socialMediaLoginType) =>
      (super.noSuchMethod(
        Invocation.method(
          #socialMediaSignInAction,
          [socialMediaLoginType],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> validateSignInAndNavigate({
    required String? accessToken,
    required String? refreshToken,
    required _i30.SocialMediaLoginType? socialMediaLoginType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #validateSignInAndNavigate,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #socialMediaLoginType: socialMediaLoginType,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> loginUserWithToken({
    required String? accessToken,
    required String? refreshToken,
    required _i30.SocialMediaLoginType? socialMediaLoginType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #loginUserWithToken,
          [],
          {
            #accessToken: accessToken,
            #refreshToken: refreshToken,
            #socialMediaLoginType: socialMediaLoginType,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [VerifyLoginViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyLoginViewModel extends _i1.Mock
    implements _i88.VerifyLoginViewModel {
  MockVerifyLoginViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isVerifyButtonEnabled => (super.noSuchMethod(
        Invocation.getter(#isVerifyButtonEnabled),
        returnValue: false,
      ) as bool);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  int get otpCount => (super.noSuchMethod(
        Invocation.getter(#otpCount),
        returnValue: 0,
      ) as int);

  @override
  _i32.ResendOtpUseCase get resendOtpUseCase => (super.noSuchMethod(
        Invocation.getter(#resendOtpUseCase),
        returnValue: _FakeResendOtpUseCase_35(
          this,
          Invocation.getter(#resendOtpUseCase),
        ),
      ) as _i32.ResendOtpUseCase);

  @override
  _i33.VerifyOtpUseCase get verifyOtpUseCase => (super.noSuchMethod(
        Invocation.getter(#verifyOtpUseCase),
        returnValue: _FakeVerifyOtpUseCase_36(
          this,
          Invocation.getter(#verifyOtpUseCase),
        ),
      ) as _i33.VerifyOtpUseCase);

  @override
  List<String> get initialVerificationCode => (super.noSuchMethod(
        Invocation.getter(#initialVerificationCode),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set redirection(_i43.InAppRedirection? value) => super.noSuchMethod(
        Invocation.setter(
          #redirection,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set email(String? value) => super.noSuchMethod(
        Invocation.setter(
          #email,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set phoneNumber(String? value) => super.noSuchMethod(
        Invocation.setter(
          #phoneNumber,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set initialVerificationCode(List<String>? value) => super.noSuchMethod(
        Invocation.setter(
          #initialVerificationCode,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> backButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #backButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> verifyButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #verifyButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> resendCodeButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #resendCodeButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void otpFieldChanged(String? verificationCode) => super.noSuchMethod(
        Invocation.method(
          #otpFieldChanged,
          [verificationCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> otpFieldSubmitted(String? verificationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #otpFieldSubmitted,
          [verificationCode],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void fillInitial(String? verificationCode) => super.noSuchMethod(
        Invocation.method(
          #fillInitial,
          [verificationCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [VerifyPurchaseViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockVerifyPurchaseViewModel extends _i1.Mock
    implements _i89.VerifyPurchaseViewModel {
  MockVerifyPurchaseViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isVerifyButtonEnabled => (super.noSuchMethod(
        Invocation.getter(#isVerifyButtonEnabled),
        returnValue: false,
      ) as bool);

  @override
  String get errorMessage => (super.noSuchMethod(
        Invocation.getter(#errorMessage),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#errorMessage),
        ),
      ) as String);

  @override
  int get otpCount => (super.noSuchMethod(
        Invocation.getter(#otpCount),
        returnValue: 0,
      ) as int);

  @override
  _i34.ResendOrderOtpUseCase get resendOrderOtpUseCase => (super.noSuchMethod(
        Invocation.getter(#resendOrderOtpUseCase),
        returnValue: _FakeResendOrderOtpUseCase_37(
          this,
          Invocation.getter(#resendOrderOtpUseCase),
        ),
      ) as _i34.ResendOrderOtpUseCase);

  @override
  _i35.VerifyOrderOtpUseCase get verifyOrderOtpUseCase => (super.noSuchMethod(
        Invocation.getter(#verifyOrderOtpUseCase),
        returnValue: _FakeVerifyOrderOtpUseCase_38(
          this,
          Invocation.getter(#verifyOrderOtpUseCase),
        ),
      ) as _i35.VerifyOrderOtpUseCase);

  @override
  List<String> get initialVerificationCode => (super.noSuchMethod(
        Invocation.getter(#initialVerificationCode),
        returnValue: <String>[],
      ) as List<String>);

  @override
  set iccid(String? value) => super.noSuchMethod(
        Invocation.setter(
          #iccid,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set orderID(String? value) => super.noSuchMethod(
        Invocation.setter(
          #orderID,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set initialVerificationCode(List<String>? value) => super.noSuchMethod(
        Invocation.setter(
          #initialVerificationCode,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> backButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #backButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> verifyButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #verifyButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> resendCodeButtonTapped() => (super.noSuchMethod(
        Invocation.method(
          #resendCodeButtonTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void otpFieldChanged(String? verificationCode) => super.noSuchMethod(
        Invocation.method(
          #otpFieldChanged,
          [verificationCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> otpFieldSubmitted(String? verificationCode) =>
      (super.noSuchMethod(
        Invocation.method(
          #otpFieldSubmitted,
          [verificationCode],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void fillInitial(String? verificationCode) => super.noSuchMethod(
        Invocation.method(
          #fillInitial,
          [verificationCode],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [SkeletonViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockSkeletonViewModel extends _i1.Mock implements _i90.SkeletonViewModel {
  MockSkeletonViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i28.LoginUseCase get loginUseCase => (super.noSuchMethod(
        Invocation.getter(#loginUseCase),
        returnValue: _FakeLoginUseCase_31(
          this,
          Invocation.getter(#loginUseCase),
        ),
      ) as _i28.LoginUseCase);

  @override
  String get projectID => (super.noSuchMethod(
        Invocation.getter(#projectID),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#projectID),
        ),
      ) as String);

  @override
  set projectID(String? value) => super.noSuchMethod(
        Invocation.setter(
          #projectID,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void getFirebaseID() => super.noSuchMethod(
        Invocation.method(
          #getFirebaseID,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> getFacts() => (super.noSuchMethod(
        Invocation.method(
          #getFacts,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> getCoins() => (super.noSuchMethod(
        Invocation.method(
          #getCoins,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> loginUser() => (super.noSuchMethod(
        Invocation.method(
          #loginUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> registerUser() => (super.noSuchMethod(
        Invocation.method(
          #registerUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showLoader() => (super.noSuchMethod(
        Invocation.method(
          #showLoader,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [UserGuideDetailedViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserGuideDetailedViewModel extends _i1.Mock
    implements _i91.UserGuideDetailedViewModel {
  MockUserGuideDetailedViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i36.UserGuideViewDataSource get userGuideViewDataSource =>
      (super.noSuchMethod(
        Invocation.getter(#userGuideViewDataSource),
        returnValue: _FakeUserGuideViewDataSource_39(
          this,
          Invocation.getter(#userGuideViewDataSource),
        ),
      ) as _i36.UserGuideViewDataSource);

  @override
  _i23.ScrollController get scrollController => (super.noSuchMethod(
        Invocation.getter(#scrollController),
        returnValue: _FakeScrollController_40(
          this,
          Invocation.getter(#scrollController),
        ),
      ) as _i23.ScrollController);

  @override
  bool get isFromAndroidScreen => (super.noSuchMethod(
        Invocation.getter(#isFromAndroidScreen),
        returnValue: false,
      ) as bool);

  @override
  set userGuideViewDataSource(_i36.UserGuideViewDataSource? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #userGuideViewDataSource,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set scrollController(_i23.ScrollController? value) => super.noSuchMethod(
        Invocation.setter(
          #scrollController,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set isFromAndroidScreen(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #isFromAndroidScreen,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  _i8.AnalyticsService get analyticsService => (super.noSuchMethod(
        Invocation.getter(#analyticsService),
        returnValue: _FakeAnalyticsService_6(
          this,
          Invocation.getter(#analyticsService),
        ),
      ) as _i8.AnalyticsService);

  @override
  _i9.ThemeService get themeService => (super.noSuchMethod(
        Invocation.getter(#themeService),
        returnValue: _FakeThemeService_7(
          this,
          Invocation.getter(#themeService),
        ),
      ) as _i9.ThemeService);

  @override
  _i10.UserService get userService => (super.noSuchMethod(
        Invocation.getter(#userService),
        returnValue: _FakeUserService_8(
          this,
          Invocation.getter(#userService),
        ),
      ) as _i10.UserService);

  @override
  _i11.PaymentService get paymentService => (super.noSuchMethod(
        Invocation.getter(#paymentService),
        returnValue: _FakePaymentService_9(
          this,
          Invocation.getter(#paymentService),
        ),
      ) as _i11.PaymentService);

  @override
  _i12.RedirectionsHandlerService get redirectionsHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#redirectionsHandlerService),
        returnValue: _FakeRedirectionsHandlerService_10(
          this,
          Invocation.getter(#redirectionsHandlerService),
        ),
      ) as _i12.RedirectionsHandlerService);

  @override
  _i3.AddDeviceUseCase get addDeviceUseCase => (super.noSuchMethod(
        Invocation.getter(#addDeviceUseCase),
        returnValue: _FakeAddDeviceUseCase_11(
          this,
          Invocation.getter(#addDeviceUseCase),
        ),
      ) as _i3.AddDeviceUseCase);

  @override
  _i13.FlutterChannelHandlerService get flutterChannelHandlerService =>
      (super.noSuchMethod(
        Invocation.getter(#flutterChannelHandlerService),
        returnValue: _FakeFlutterChannelHandlerService_12(
          this,
          Invocation.getter(#flutterChannelHandlerService),
        ),
      ) as _i13.FlutterChannelHandlerService);

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  bool get showMainBanner => (super.noSuchMethod(
        Invocation.getter(#showMainBanner),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get userMsisdn => (super.noSuchMethod(
        Invocation.getter(#userMsisdn),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userMsisdn),
        ),
      ) as String);

  @override
  bool get isArabic => (super.noSuchMethod(
        Invocation.getter(#isArabic),
        returnValue: false,
      ) as bool);

  @override
  _i14.Color get themeColor => (super.noSuchMethod(
        Invocation.getter(#themeColor),
        returnValue: _FakeColor_13(
          this,
          Invocation.getter(#themeColor),
        ),
      ) as _i14.Color);

  @override
  List<_i71.ListenableServiceMixin> get listenableServices =>
      (super.noSuchMethod(
        Invocation.getter(#listenableServices),
        returnValue: <_i71.ListenableServiceMixin>[],
      ) as List<_i71.ListenableServiceMixin>);

  @override
  List<_i71.ReactiveServiceMixin> get reactiveServices => (super.noSuchMethod(
        Invocation.getter(#reactiveServices),
        returnValue: <_i71.ReactiveServiceMixin>[],
      ) as List<_i71.ReactiveServiceMixin>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  bool get disposed => (super.noSuchMethod(
        Invocation.getter(#disposed),
        returnValue: false,
      ) as bool);

  @override
  bool get initialised => (super.noSuchMethod(
        Invocation.getter(#initialised),
        returnValue: false,
      ) as bool);

  @override
  bool get onModelReadyCalled => (super.noSuchMethod(
        Invocation.getter(#onModelReadyCalled),
        returnValue: false,
      ) as bool);

  @override
  set disposed(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #disposed,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool get isBusy => (super.noSuchMethod(
        Invocation.getter(#isBusy),
        returnValue: false,
      ) as bool);

  @override
  bool get anyObjectsBusy => (super.noSuchMethod(
        Invocation.getter(#anyObjectsBusy),
        returnValue: false,
      ) as bool);

  @override
  _i72.ViewState get viewState => (super.noSuchMethod(
        Invocation.getter(#viewState),
        returnValue: _i72.ViewState.idle,
      ) as _i72.ViewState);

  @override
  bool get applyShimmer => (super.noSuchMethod(
        Invocation.getter(#applyShimmer),
        returnValue: false,
      ) as bool);

  @override
  set shimmerHeight(double? value) => super.noSuchMethod(
        Invocation.setter(
          #shimmerHeight,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set applyShimmer(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #applyShimmer,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i15.DialogService get dialogService => (super.noSuchMethod(
        Invocation.getter(#dialogService),
        returnValue: _FakeDialogService_14(
          this,
          Invocation.getter(#dialogService),
        ),
      ) as _i15.DialogService);

  @override
  _i15.SnackbarService get snackBarService => (super.noSuchMethod(
        Invocation.getter(#snackBarService),
        returnValue: _FakeSnackbarService_15(
          this,
          Invocation.getter(#snackBarService),
        ),
      ) as _i15.SnackbarService);

  @override
  _i15.BottomSheetService get bottomSheetService => (super.noSuchMethod(
        Invocation.getter(#bottomSheetService),
        returnValue: _FakeBottomSheetService_16(
          this,
          Invocation.getter(#bottomSheetService),
        ),
      ) as _i15.BottomSheetService);

  @override
  _i15.NavigationService get navigationService => (super.noSuchMethod(
        Invocation.getter(#navigationService),
        returnValue: _FakeNavigationService_17(
          this,
          Invocation.getter(#navigationService),
        ),
      ) as _i15.NavigationService);

  @override
  _i16.ConnectivityService get connectivityService => (super.noSuchMethod(
        Invocation.getter(#connectivityService),
        returnValue: _FakeConnectivityService_18(
          this,
          Invocation.getter(#connectivityService),
        ),
      ) as _i16.ConnectivityService);

  @override
  _i17.NavigationRouter get navigationRouter => (super.noSuchMethod(
        Invocation.getter(#navigationRouter),
        returnValue: _FakeNavigationRouter_19(
          this,
          Invocation.getter(#navigationRouter),
        ),
      ) as _i17.NavigationRouter);

  @override
  _i18.UserAuthenticationService get userAuthenticationService =>
      (super.noSuchMethod(
        Invocation.getter(#userAuthenticationService),
        returnValue: _FakeUserAuthenticationService_20(
          this,
          Invocation.getter(#userAuthenticationService),
        ),
      ) as _i18.UserAuthenticationService);

  @override
  String get routeName => (super.noSuchMethod(
        Invocation.getter(#routeName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#routeName),
        ),
      ) as String);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  set routeName(String? value) => super.noSuchMethod(
        Invocation.setter(
          #routeName,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onViewModelReady() => super.noSuchMethod(
        Invocation.method(
          #onViewModelReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> nextStepTapped() => (super.noSuchMethod(
        Invocation.method(
          #nextStepTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> previousStepTapped() => (super.noSuchMethod(
        Invocation.method(
          #previousStepTapped,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  List<_i73.BundleResponseModel>? getBundlesForCountry(String? countryCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesForCountry,
        [countryCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i19.Future<void> logoutUser() => (super.noSuchMethod(
        Invocation.method(
          #logoutUser,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void hideKeyboard() => super.noSuchMethod(
        Invocation.method(
          #hideKeyboard,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void rebuildUi() => super.noSuchMethod(
        Invocation.method(
          #rebuildUi,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setInitialised(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setInitialised,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setOnModelReadyCalled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setOnModelReadyCalled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool busy(Object? object) => (super.noSuchMethod(
        Invocation.method(
          #busy,
          [object],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setBusyForObject(
    Object? object,
    bool? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setBusyForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setBusy(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setBusy,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  T skeletonData<T>({
    required T? realData,
    required T? busyData,
    Object? busyKey,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #skeletonData,
          [],
          {
            #realData: realData,
            #busyData: busyData,
            #busyKey: busyKey,
          },
        ),
        returnValue: _i39.dummyValue<T>(
          this,
          Invocation.method(
            #skeletonData,
            [],
            {
              #realData: realData,
              #busyData: busyData,
              #busyKey: busyKey,
            },
          ),
        ),
      ) as T);

  @override
  _i19.Future<T> runBusyFuture<T>(
    _i19.Future<T>? busyFuture, {
    Object? busyObject,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runBusyFuture,
          [busyFuture],
          {
            #busyObject: busyObject,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runBusyFuture,
                  [busyFuture],
                  {
                    #busyObject: busyObject,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runBusyFuture,
                [busyFuture],
                {
                  #busyObject: busyObject,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  dynamic error(Object? object) => super.noSuchMethod(Invocation.method(
        #error,
        [object],
      ));

  @override
  void clearErrors() => super.noSuchMethod(
        Invocation.method(
          #clearErrors,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool hasErrorForKey(Object? key) => (super.noSuchMethod(
        Invocation.method(
          #hasErrorForKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  void setError(dynamic error) => super.noSuchMethod(
        Invocation.method(
          #setError,
          [error],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForModelOrObject(
    dynamic value, {
    Object? key,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForModelOrObject,
          [value],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setErrorForObject(
    Object? object,
    dynamic value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setErrorForObject,
          [
            object,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<T> runErrorFuture<T>(
    _i19.Future<T>? future, {
    Object? key,
    bool? throwException = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #runErrorFuture,
          [future],
          {
            #key: key,
            #throwException: throwException,
          },
        ),
        returnValue: _i39.ifNotNull(
              _i39.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #runErrorFuture,
                  [future],
                  {
                    #key: key,
                    #throwException: throwException,
                  },
                ),
              ),
              (T v) => _i19.Future<T>.value(v),
            ) ??
            _FakeFuture_21<T>(
              this,
              Invocation.method(
                #runErrorFuture,
                [future],
                {
                  #key: key,
                  #throwException: throwException,
                },
              ),
            ),
      ) as _i19.Future<T>);

  @override
  void onFutureError(
    dynamic error,
    Object? key,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onFutureError,
          [
            error,
            key,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setViewState(_i72.ViewState? state) => super.noSuchMethod(
        Invocation.method(
          #setViewState,
          [state],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void handleLoading() => super.noSuchMethod(
        Invocation.method(
          #handleLoading,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIdleState() => super.noSuchMethod(
        Invocation.method(
          #setIdleState,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<
      _i15.DialogResponse<_i74.MainDialogResponse>?> showErrorMessageDialog(
    String? message, {
    _i23.TextStyle? descriptionTextStyle,
    String? cancelText,
    _i75.DialogIconType? iconType,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #showErrorMessageDialog,
          [message],
          {
            #descriptionTextStyle: descriptionTextStyle,
            #cancelText: cancelText,
            #iconType: iconType,
          },
        ),
        returnValue:
            _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>.value(),
      ) as _i19.Future<_i15.DialogResponse<_i74.MainDialogResponse>?>);

  @override
  _i19.Future<void> showNativeErrorMessage(
    String? titleMessage,
    String? contentMessage,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNativeErrorMessage,
          [
            titleMessage,
            contentMessage,
          ],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  bool isKeyboardVisible(_i23.BuildContext? context) => (super.noSuchMethod(
        Invocation.method(
          #isKeyboardVisible,
          [context],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i19.Future<String?> listenForSMS() => (super.noSuchMethod(
        Invocation.method(
          #listenForSMS,
          [],
        ),
        returnValue: _i19.Future<String?>.value(),
      ) as _i19.Future<String?>);

  @override
  _i19.Future<void> stopSmsListener() => (super.noSuchMethod(
        Invocation.method(
          #stopSmsListener,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> showNoConnectionDialog(String? routeName) =>
      (super.noSuchMethod(
        Invocation.method(
          #showNoConnectionDialog,
          [routeName],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void closeConnectionDialog() => super.noSuchMethod(
        Invocation.method(
          #closeConnectionDialog,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> navigateToHomePager<T>(
          {_i43.InAppRedirection? redirection}) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateToHomePager,
          [],
          {#redirection: redirection},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleResponse<T>(
    _i4.Resource<T>? response, {
    required _i19.Future<void> Function(_i4.Resource<T>)? onSuccess,
    _i19.Future<void> Function(_i4.Resource<T>)? onFailure,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleResponse,
          [response],
          {
            #onSuccess: onSuccess,
            #onFailure: onFailure,
          },
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> handleError(_i4.Resource<dynamic>? response) =>
      (super.noSuchMethod(
        Invocation.method(
          #handleError,
          [response],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void onViewDidAppear() => super.noSuchMethod(
        Invocation.method(
          #onViewDidAppear,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onDispose() => super.noSuchMethod(
        Invocation.method(
          #onDispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i19.Future<void> onConnectivityChanged({required bool? connected}) =>
      (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChanged,
          [],
          {#connected: connected},
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> onConnectivityChangedUpdate() => (super.noSuchMethod(
        Invocation.method(
          #onConnectivityChangedUpdate,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i10.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set accountList(List<_i92.AccountModel>? value) => super.noSuchMethod(
        Invocation.setter(
          #accountList,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [UserAuthenticationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserAuthenticationService extends _i1.Mock
    implements _i18.UserAuthenticationService {
  MockUserAuthenticationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.LocalStorageService get localStorageService => (super.noSuchMethod(
        Invocation.getter(#localStorageService),
        returnValue: _FakeLocalStorageService_5(
          this,
          Invocation.getter(#localStorageService),
        ),
      ) as _i7.LocalStorageService);

  @override
  bool get isUserLoggedIn => (super.noSuchMethod(
        Invocation.getter(#isUserLoggedIn),
        returnValue: false,
      ) as bool);

  @override
  String get userFirstName => (super.noSuchMethod(
        Invocation.getter(#userFirstName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userFirstName),
        ),
      ) as String);

  @override
  String get userLastName => (super.noSuchMethod(
        Invocation.getter(#userLastName),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userLastName),
        ),
      ) as String);

  @override
  String get userEmailAddress => (super.noSuchMethod(
        Invocation.getter(#userEmailAddress),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userEmailAddress),
        ),
      ) as String);

  @override
  String get userPhoneNumber => (super.noSuchMethod(
        Invocation.getter(#userPhoneNumber),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#userPhoneNumber),
        ),
      ) as String);

  @override
  bool get isNewsletterSubscribed => (super.noSuchMethod(
        Invocation.getter(#isNewsletterSubscribed),
        returnValue: false,
      ) as bool);

  @override
  String get referralCode => (super.noSuchMethod(
        Invocation.getter(#referralCode),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#referralCode),
        ),
      ) as String);

  @override
  String get walletCurrencyCode => (super.noSuchMethod(
        Invocation.getter(#walletCurrencyCode),
        returnValue: _i39.dummyValue<String>(
          this,
          Invocation.getter(#walletCurrencyCode),
        ),
      ) as String);

  @override
  double get walletAvailableBalance => (super.noSuchMethod(
        Invocation.getter(#walletAvailableBalance),
        returnValue: 0.0,
      ) as double);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  _i19.Future<void> saveUserResponse(_i44.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveUserResponse,
          [authResponse],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> updateUserResponse(_i44.AuthResponseModel? authResponse) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserResponse,
          [authResponse],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> clearUserInfo() => (super.noSuchMethod(
        Invocation.method(
          #clearUserInfo,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [BundlesDataService].
///
/// See the documentation for Mockito's code generation for more information.
class MockBundlesDataService extends _i1.Mock
    implements _i55.BundlesDataService {
  MockBundlesDataService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isBundleServicesLoading => (super.noSuchMethod(
        Invocation.getter(#isBundleServicesLoading),
        returnValue: false,
      ) as bool);

  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
      ) as bool);

  @override
  int get listenersCount => (super.noSuchMethod(
        Invocation.getter(#listenersCount),
        returnValue: 0,
      ) as int);

  @override
  List<_i73.BundleResponseModel>? getBundlesByCountry(String? iso3Code) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByCountry,
        [iso3Code],
      )) as List<_i73.BundleResponseModel>?);

  @override
  List<_i73.BundleResponseModel>? getBundlesByRegion(String? regionCode) =>
      (super.noSuchMethod(Invocation.method(
        #getBundlesByRegion,
        [regionCode],
      )) as List<_i73.BundleResponseModel>?);

  @override
  _i80.CountryResponseModel? getCountryByCode(String? iso3Code) =>
      (super.noSuchMethod(Invocation.method(
        #getCountryByCode,
        [iso3Code],
      )) as _i80.CountryResponseModel?);

  @override
  _i81.RegionsResponseModel? getRegionByCode(String? regionCode) =>
      (super.noSuchMethod(Invocation.method(
        #getRegionByCode,
        [regionCode],
      )) as _i81.RegionsResponseModel?);

  @override
  _i19.Future<void> refreshData() => (super.noSuchMethod(
        Invocation.method(
          #refreshData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  _i19.Future<void> clearData() => (super.noSuchMethod(
        Invocation.method(
          #clearData,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);

  @override
  void listenToReactiveValues(List<dynamic>? reactiveValues) =>
      super.noSuchMethod(
        Invocation.method(
          #listenToReactiveValues,
          [reactiveValues],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(void Function()? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EnvironmentService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentService extends _i1.Mock
    implements _i93.EnvironmentService {
  MockEnvironmentService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isAndroid => (super.noSuchMethod(
        Invocation.getter(#isAndroid),
        returnValue: false,
      ) as bool);
}

/// A class which mocks [SharedPreferences].
///
/// See the documentation for Mockito's code generation for more information.
class MockSharedPreferences extends _i1.Mock implements _i94.SharedPreferences {
  MockSharedPreferences() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Set<String> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: <String>{},
      ) as Set<String>);

  @override
  Object? get(String? key) => (super.noSuchMethod(Invocation.method(
        #get,
        [key],
      )) as Object?);

  @override
  bool? getBool(String? key) => (super.noSuchMethod(Invocation.method(
        #getBool,
        [key],
      )) as bool?);

  @override
  int? getInt(String? key) => (super.noSuchMethod(Invocation.method(
        #getInt,
        [key],
      )) as int?);

  @override
  double? getDouble(String? key) => (super.noSuchMethod(Invocation.method(
        #getDouble,
        [key],
      )) as double?);

  @override
  String? getString(String? key) => (super.noSuchMethod(Invocation.method(
        #getString,
        [key],
      )) as String?);

  @override
  bool containsKey(String? key) => (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [key],
        ),
        returnValue: false,
      ) as bool);

  @override
  List<String>? getStringList(String? key) =>
      (super.noSuchMethod(Invocation.method(
        #getStringList,
        [key],
      )) as List<String>?);

  @override
  _i19.Future<bool> setBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setInt(
    String? key,
    int? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setInt,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setDouble(
    String? key,
    double? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setDouble,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> setStringList(
    String? key,
    List<String>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setStringList,
          [
            key,
            value,
          ],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> commit() => (super.noSuchMethod(
        Invocation.method(
          #commit,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<bool> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<void> reload() => (super.noSuchMethod(
        Invocation.method(
          #reload,
          [],
        ),
        returnValue: _i19.Future<void>.value(),
        returnValueForMissingStub: _i19.Future<void>.value(),
      ) as _i19.Future<void>);
}

/// A class which mocks [FlutterEsim].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterEsim extends _i1.Mock implements _i95.FlutterEsim {
  MockFlutterEsim() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Stream<dynamic> get onEvent => (super.noSuchMethod(
        Invocation.getter(#onEvent),
        returnValue: _i19.Stream<dynamic>.empty(),
      ) as _i19.Stream<dynamic>);

  @override
  _i19.Future<bool> isSupportESim(List<String>? newer) => (super.noSuchMethod(
        Invocation.method(
          #isSupportESim,
          [newer],
        ),
        returnValue: _i19.Future<bool>.value(false),
      ) as _i19.Future<bool>);

  @override
  _i19.Future<String> installEsimProfile(String? profile) =>
      (super.noSuchMethod(
        Invocation.method(
          #installEsimProfile,
          [profile],
        ),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.method(
            #installEsimProfile,
            [profile],
          ),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<String> instructions() => (super.noSuchMethod(
        Invocation.method(
          #instructions,
          [],
        ),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.method(
            #instructions,
            [],
          ),
        )),
      ) as _i19.Future<String>);
}

/// A class which mocks [APIDevice].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIDevice extends _i1.Mock implements _i96.APIDevice {
  MockAPIDevice() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> registerDevice({
    required String? fcmToken,
    required String? deviceId,
    required String? platformTag,
    required String? osTag,
    required String? appGuid,
    required String? version,
    required String? userGuid,
    required _i61.DeviceInfoRequestModel? deviceInfo,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #registerDevice,
        [],
        {
          #fcmToken: fcmToken,
          #deviceId: deviceId,
          #platformTag: platformTag,
          #osTag: osTag,
          #appGuid: appGuid,
          #version: version,
          #userGuid: userGuid,
          #deviceInfo: deviceInfo,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [APIApp].
///
/// See the documentation for Mockito's code generation for more information.
class MockAPIApp extends _i1.Mock implements _i97.APIApp {
  MockAPIApp() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.FutureOr<dynamic> addDevice({
    required String? fcmToken,
    required String? manufacturer,
    required String? deviceModel,
    required String? deviceOs,
    required String? deviceOsVersion,
    required String? appVersion,
    required String? ramSize,
    required String? screenResolution,
    required bool? isRooted,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #addDevice,
        [],
        {
          #fcmToken: fcmToken,
          #manufacturer: manufacturer,
          #deviceModel: deviceModel,
          #deviceOs: deviceOs,
          #deviceOsVersion: deviceOsVersion,
          #appVersion: appVersion,
          #ramSize: ramSize,
          #screenResolution: screenResolution,
          #isRooted: isRooted,
        },
      )) as _i19.FutureOr<dynamic>);

  @override
  _i19.FutureOr<dynamic> contactUs({
    required String? email,
    required String? message,
  }) =>
      (super.noSuchMethod(Invocation.method(
        #contactUs,
        [],
        {
          #email: email,
          #message: message,
        },
      )) as _i19.FutureOr<dynamic>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockClient extends _i1.Mock implements _i37.Client {
  MockClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i19.Future<_i37.Response> head(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #head,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<_i37.Response> get(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #get,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<_i37.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i98.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #post,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<_i37.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i98.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #put,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<_i37.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i98.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #patch,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<_i37.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i98.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {
            #headers: headers,
            #body: body,
            #encoding: encoding,
          },
        ),
        returnValue: _i19.Future<_i37.Response>.value(_FakeResponse_41(
          this,
          Invocation.method(
            #delete,
            [url],
            {
              #headers: headers,
              #body: body,
              #encoding: encoding,
            },
          ),
        )),
      ) as _i19.Future<_i37.Response>);

  @override
  _i19.Future<String> read(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<String>.value(_i39.dummyValue<String>(
          this,
          Invocation.method(
            #read,
            [url],
            {#headers: headers},
          ),
        )),
      ) as _i19.Future<String>);

  @override
  _i19.Future<_i99.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBytes,
          [url],
          {#headers: headers},
        ),
        returnValue: _i19.Future<_i99.Uint8List>.value(_i99.Uint8List(0)),
      ) as _i19.Future<_i99.Uint8List>);

  @override
  _i19.Future<_i37.StreamedResponse> send(_i37.BaseRequest? request) =>
      (super.noSuchMethod(
        Invocation.method(
          #send,
          [request],
        ),
        returnValue:
            _i19.Future<_i37.StreamedResponse>.value(_FakeStreamedResponse_42(
          this,
          Invocation.method(
            #send,
            [request],
          ),
        )),
      ) as _i19.Future<_i37.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
